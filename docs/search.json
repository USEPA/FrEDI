[{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"About FrEDI","text":"Framework Evaluating Damages Impacts (FrEDI) developed understand communicate potential physical economic impacts future climate change United States. FrEDI works first taking user-defined projections U.S. population, gross domestic product (GDP), global (CONUS) mean surface temperature change (relative 1986-2005 average baseline). run, FrEDI draws upon underlying sector, state, GCM-specific temperature-impact relationships project annual physical economic impacts climate change across multiple impact sectors, U.S. states, population groups across contiguous U.S. (CONUS), end 21st century (optionally year 2300).  Recommended Citation: EPA. 2024. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). U.S. Environmental Protection Agency, EPA 430-R-24-001. Available : https://www.epa.gov/cira/fredi.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"key-characteristics","dir":"Articles","previous_headings":"","what":"Key Characteristics","title":"About FrEDI","text":"FrEDI fills important gap assessing U.S. climate change impacts : Incorporating broad range impact studies common analytic framework Providing robust, customizable, fast tool facilitate custom scenario analyses Providing flexible framework can readily incorporate new information, ensure projections reflect latest science climate change impacts FrEDI draws upon wide range existing scientific literature. FrEDI currently draws upon 30 existing peer-reviewed studies climate change impact models uses impacts--degree temperature binning approach (Sarofim et al., 2021), estimate relationship future degrees warming impacts across 20 impact category sectors (Hartin et al., 2023). Many sectoral studies adapted EPA’s Climate Change Impacts Risk Assessment (CIRA) project, began 2008 assess compare impacts climate change U.S. using consistent set climate models socioeconomic scenarios. External studies (example Climate Impacts Lab) now also integrated FrEDI cases underlying studies can provide regional physical economic impacts degree warming (cm sea level rise) can scaled account future socioeconomic (e.g., GDP population) sector-specific conditions. FrEDI peer-reviewed developed open-source R package. Framework Technical Documentation subject public review comment period independent external peer review, following guidance EPA Peer-Review Handbook Influential Scientific Information (ISI). Information peer-review available EPA Science Inventory. FrEDI customizable fast. shown Figure 1, user first provides custom projections mean surface temperature, U.S. population, GDP. Within minutes FrEDI outputs timeseries annual physical economic impacts across multiple dimensions (see Examples page). framework include natural variability therefore designed quantify impacts, level accuracy, level future temperature change. FrEDI continually improved reflect current state climate change impact science. FrEDI currently includes temperature-impact relationships 20 health, infrastructure, electricity, agriculture, recreation, ecosystem-related sectors includes capacity differentiate sectoral impacts across multiple geographic regions within U.S., demographics, various adaptation scenarios. described Technical Documentation, FrEDI continually updated incorporate new studies common framework reflect latest available science climate change impacts within U.S. borders.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"technical-details","dir":"Articles","previous_headings":"","what":"Technical Details","title":"About FrEDI","text":"FrEDI can run single scenario, run multiple times different inputs, example facilitate comparisons two individual scenarios (e.g., reference policy), assess uncertainties input projections. main FrEDI function FrEDI::run_fredi(), described Getting Started page. FrEDI also includes FrEDI::run_fredi_sv() module, added capability compare distribution physical climate-driven impacts six impact sectors across different population groups concern within U.S.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-input","dir":"Articles","previous_headings":"Technical Details","what":"FrEDI Input","title":"About FrEDI","text":"FrEDI::run_fredi() can accept following projections input: Temperature (global CONUS) Sea-Level Rise (optional) U.S. Population U.S. GDP user supply projections, FrEDI use FrEDI default projections (see Example #1)","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"temperature","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"Temperature","title":"About FrEDI","text":"CSV containing mean temperatures degrees Celsius relative 1986-2005 average (degrees warming relative baseline). Temperature values must greater equal zero Celsius. first column needs contain years interval 2000 2100 (2300) second column contains temperatures, degrees Celsius, 1986-2005 baseline. Users can convert global temperatures CONUS temperatures using FrEDI::convertTemps(=\"global\") specifying FrEDI::import_inputs(temptype=\"global\") importing temperature scenario CSV file. FrEDI can also used project impacts associated temperature trajectories associated specific emission scenarios. Users encouraged use simple climate model first relate emissions global mean temperature change, input FrEDI.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"sea-level-rise-slr","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"Sea Level Rise (SLR)","title":"About FrEDI","text":"CSV file containing custom sea level rise scenario, centimeters. first column contains years interval 2000 2100 (2300) second column contains values global mean sea level rise (GMSL), centimeters, 2000 baseline. SLR scenario specified, FrEDI project SLR based input temperature trajectory.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"u-s--population","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"U.S. Population","title":"About FrEDI","text":"CSV file containing U.S. population scenario. first column contains years interval 2010 2100 (2300). second contains population values. third column specifies geographical scale data. details, see ?import_inputs().","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"u-s--gdp","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"U.S. GDP","title":"About FrEDI","text":"CSV file containing scenario U.S. gross domestic product (GDP). first column contains years interval 2010 2100 second column contains values GDP, total 2015$. See FrEDI::import_inputs() function information formatting input data use FrEDI.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"additional-parameters","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"Additional Parameters","title":"About FrEDI","text":"Users also option specify additional parameters, including: income elasticity (default = 1) - numeric value indicating elasticity use adjusting VSL applicable sectors impacts. level desired results aggregation specifying sectors analyze (default ==)","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-output","dir":"Articles","previous_headings":"Technical Details","what":"FrEDI Output","title":"About FrEDI","text":"FrEDI outputs R dataframe impacts corresponding following dimensions: Regions States Impact sectors Variants Impact types Note: care taken calculating national total impacts sectors, variants, impact types capture overlapping impacts. information, see Example #1","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-regions","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Regions","title":"About FrEDI","text":"FrEDI currently estimates climate-driven impacts occur within physical borders 48 states plus District Columbia within contiguous United States (CONUS). states can aggregated regions (Southeast, Southern Plains, Southwest, Northwest, Northern Plains, Midwest, Northeast; see Figure 1), correspond 4th National Climate Assessment.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-impact-sectors-units","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Impact Sectors & Units","title":"About FrEDI","text":"FrEDI currently projects monetized climate-driven impacts across 20 health, infrastructure, electricity, agriculture, recreation, ecosystem-related sectors. FrEDI includes economic impacts (units $2015 USD) sectors physical endpoints (e.g., morbidity, mortality, response costs, etc.) nine sectors. current list FrEDI sectors, run: details sector underlying damage functions, see FrEDI Technical Documentation","code":"FrEDI_sector info <- FrEDI::get_sectorInfo(description =T)"},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-variants-adaptation-options","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Variants & Adaptation Options","title":"About FrEDI","text":"assess aspects uncertainty underlying impact studies, FrEDI also includes multiple variant options select sectors. listed variant column FrEDI sector output dataframe. example, Temperature-Related Mortality (ATS Temperature-Related mortality), includes multiple impact estimates correspond mean, well high low confidence intervals sector (based information underlying study). sectors, Agriculture (CIL Agriculture), include impact estimates derived multiple damage functions associated different conditions (e.g., estimates without CO2 fertilization). FrEDI also calculates climate-driven impacts different adaptation assumptions, select sectors. Adaptation options applicable sectors (e.g., Coastal Property, Roads, Rail) also included variants. available adaptation options reflect extent treatment paid adaptation underlying sectoral impact studies. adaptation options labeled FrEDI : Additional Adaptation: additional adaptation reflect “business usual” scenario, incorporates adaptive measures strategies reflected historical actions respond climate hazards Reactive Adaptation, Reasonably Anticipated Adaptation: reflect options taken without advanced warning foresight (e.g., action taken prevent mitigate future climate change impacts) Proactive Adaptation Direct Adaptation: reflect damages cost-effective adaptations implemented perfect foresight. FrEDI includes adaptation options realized magnitude, type, location, timing long-term climate-driven damages intricately linked ability implement adaptive measures reduce risks.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-impact-types","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Impact Types","title":"About FrEDI","text":"FrEDI also calculates impacts within sector function multiple impactTypes. impact types considered depend level detail available underlying impact studies. example, impacts climate-driven changes air quality (Climate-Driven Changes Air Quality) calculated separately mortality-related impacts ozone fine particulate matter (PM2.5), can combined calculate total impacts sector.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-sv-module","dir":"Articles","previous_headings":"Technical Details","what":"FrEDI SV Module","title":"About FrEDI","text":"FrEDI_SV module can also assess social vulnerability implications impacts climate change select sectors specific population groups concern. basic structure, specific methodology, data underlying FrEDI_SV derived EPA’s independently peer-reviewed September 2021 report,Climate Change Social Vulnerability United States: Focus Six Impacts., based assessment spatial intersection climate impacts projected occur current location different demographic groups, characterized Census American Community Survey. See Example #2 information running FrEDI_SV.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"interpreting-fredi-results","dir":"Articles","previous_headings":"","what":"Interpreting FrEDI Results","title":"About FrEDI","text":"results main module (FrEDI::run_fredi()) presented net annual impacts, either physical units $2015 US dollars. FrEDI evaluates negative positive effects climate change. national level, net climate-driven damages outweigh positive effects sectors. reflect climate-driven impacts accrued baseline period given impact year. Presenting impacts specific year consistent approach commonly used throughout climate impact literature, including Intergovernmental Panel Climate Change (IPCC) Scientific Assessment Reports U.S National Climate Assessment (NCA). also important caveats consider interpreting FrEDI results, including limited : FrEDI comprehensive accounting climate-driven impacts expected occur within contiguous U.S. borders currently include impacts occurring AK, HI, U.S. territories. FrEDI consider impacts U.S. citizens residing outside U.S. feedbacks climate impacts elsewhere back U.S. trade, etc. additional uncertainties FrEDI’s underlying temperature-impact relationships fully captured available variant options uncertainties climate drivers human responses adapt changes drivers","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"running-fredi-with-default-parameters","dir":"Articles","previous_headings":"","what":"Running FrEDI with Default Parameters","title":"Example #1","text":"FrEDI commonly used project annual, climate-driven physical economic impacts associated user-defined trajectories U.S. temperature change (relative 1985-2005 baseline), population, GDP. vignette provides simple example run analyze data FrEDI’s default scenario. example script: Installs FrEDI R package GitHub Sets FrEDI input run parameters. Runs FrEDI inputs specified Step 2 Shows example types analyses using FrEDI output data. information FrEDI, see page FrEDI Technical Documentation","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"installFrEDI","dir":"Articles","previous_headings":"","what":"Step 1. Install FrEDI R package","title":"Example #1","text":"installing first time, see Installing & Running FrEDI page. Load package successfully installing FrEDI, documentation FrEDI functions can accessed way R packages. overview FrEDI’s user-defined functions, type library(help=\"FrEDI\") R console (command show documentation FrEDI even package installed). documentation specific function, type help(\"*functionName*\", package=\"FrEDI\") R console, *functionName* name one functions FrEDI (e.g., help(\"aggregate_impacts\", package=\"FrEDI\")). Alternatively, use syntax ?FrEDI::*functionName* (e.g., ?FrEDI::run_fredi()). FrEDI installed, users can also search function-specific documentation RStudio Help window. Move focus Help window using keyboard shortcut Ctrl+3 toggle search field Help using Ctrl+Alt+F1. Documentation function includes examples.","code":"require(FrEDI)"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"setFrEDI","dir":"Articles","previous_headings":"","what":"Step 2. Set FrEDI Runtime parameters","title":"Example #1","text":"First, use chunk specify & format input projections. Either provide paths specific files, set NULL use default projections variable Use chunk specify input trajectories (temperature, population, GDP) runtime parameters FrEDI. input files specified, run_fredi() use default temperature, U.S. population, GDP projections. case, run_fredi() calculate annual projected sea level rise based default temperature change. Default population scenarios based UN Median Population projection (United Nations, 2015) EPA’s ICLUSv2 model (Bierwagen et al., 2010; EPA 2017), GDP EPPA version 6 model (Chen et al., 2015). Default temperature projections GCAM reference scenario. Current default projections U.S. GDP, national population, U.S. temperature year 2090 70 trillion (2015USD), 438 million, 3.4°C respectively.  Next, set FrEDI runtime parameters","code":"### To run FrEDI for more than one scenario, the code below can be ### adapted into a loop to format the inputs for each scenario.   ###*********************************************** ### 1. Specify & Format Input Trajectories (temperature, population, U.S. GDP)  ### Input Files ### * GDP ### - Description: csv file with time series of U.S. Gross Domestic Product (units: 2015$, values: >= 0)  ### - data must start in 2010 or earlier ### - Must have columns \"year\", \"gdp_usd\" ### - If NULL - use default GDP trajectory gdpInputFile <- NULL  ### * Population ### - Description: csv file with time series of annual U.S. population (values >= 0)  ### - Data must start in 2010 or earlier ### - Must have columns \"year\" and \"pop\"; other columns may be required, depending on the popArea argument flag ### - If NULL - use default population trajectory (from ICLUS) popInputFile <- NULL  ### * Temperature ### - Description: csv file with time series of temperature relative to 1986-2005 average  ### - (units: degC, values: >=0) ### - data must start in 2000 or earlier and can be global or CONUS ### - If global --> must convert to CONUS temperature using the import_inputs() helper function ### - Must have columns \"year\", \"temp_C\" tempInputFile <- NULL  ### * SLR ### - Description: csv file with time series of global mean sea level rise relative to 2000 ### - (units: cm, values: >= 0 and <= 250) ### - data must start in 2000 or earlier ### - Must have columns \"year\", \"slr_cm\" ### - If NULL - slr is calculated from the input temperature trajectory slrInputFile <- NULL   ### Input Trajectory Parameters ### * Population area flag ### - Description: Use this to specify the geographical scale of the population data ### - Options: \"state\",\"regional\",\"national\". ### - For more information, see `?import_inputs()` for more information popAreaflag  <- \"state\"     ### * Temperature type flag ### - Description: Use this to specify whether the input temperature is global or CONUS ### - import_inputs() will convert to global to CONUS temperature ### - Options: global (input is global T), conus (input is CONUS T) ### - Default: defaults to \"conus\" temptypeflag <- \"global\"   ### Use the import_inputs() helper function to format the input trajectories for use in FrEDI inputs_list <- import_inputs(   inputsList=list(     temp = tempInputFile,     slr  = slrInputFile,     gdp  = gdpInputFile,     pop  = popInputFile   ),   temptype = temptypeflag,   popArea  = popAreaflag ) ### End import_inputs inputs_list |> glimpse() ##  list() ### Thru2300 Flag ### - Purpose: Specify whether to run FrEDI through 2100 (default) or extend to 2300 ### - Default: FALSE (will run to 2100) thru2300Flag <-  FALSE  ### Sector list flag ### - Purpose: Specify the vector of sectors for which to calculate results ### - Default: Report output for all sectors ### - See FrEDI::get_sectorInfo() for list of all sectors sectorListFlag <- NULL    ### Aggregation level flag ### - Purpose: Specify the desired level of results aggregation. For example, ###   to report national total results across all underlying climate-model  ###   damage functions, set the flag to c(\"national\",\"modelaverage\") ### - Options: at least one from c(\"national\", \"modelaverage\", \"impactyear\", ###   \"impacttype\", \"all\"), or \"none\".  ### - Default: c(\"national\", \"modelaverage\", \"impactyear\",\"impacttype\") aggLevelFlag <- c(\"national\", \"modelaverage\", \"impactyear\")  ### Maximum year flag ### - Purpose: Specify the last year of the analysis  ### - Default: 2100 maxYearFlag <- 2100  ### Elasticity flag ### - Purpose: Specify the income elasticity used to adjust the Value of a ###   Statistical Life (VSL) ### Options: any numeric value ### Default: 1 elasticityFlag <- 1     ### Output list flag ### - Purpose: Specify whether to return input arguments in addition to results data frame ### - Options: TRUE/FALSE.  ### - Default: FALSE outputListFlag <- FALSE  ### All columns flag ### - Purpose: Specify whether to include physical and economic multipliers (used in testing) ### - Options: TRUE/FALSE.  ### - Default: FALSE allColsFlag <- TRUE  ### Silent flag ### - Purpose: Specify the level of messaging to the user ### - Options: TRUE/FALSE.  ### - Default: TRUE silentFlag <- TRUE"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"runFrEDI","dir":"Articles","previous_headings":"","what":"Step 3. Run FrEDI","title":"Example #1","text":"Run FrEDI using main run_fredi() function Default parameter options used parameters specified run_fredi().","code":"### Run FrEDI using inputs and parameters set in Step #2 output_df <- run_fredi(   inputsList = inputs_list,    sectorList = sectorListFlag,   # sectorList = \"Asphalt Roads\",   aggLevels  = aggLevelFlag,   elasticity = elasticityFlag,   maxYear    = maxYearFlag,   thru2300   = thru2300Flag,   outputList = outputListFlag,   allCols    = allColsFlag,   silent     = silentFlag ) ### End run_fredi ## Checking scenarios... ## Calculating impacts... ##      Formatting initial results... ##      Calculating temperature-driven scaled impacts... ##      Calculating SLR-driven scaled impacts... ## Formatting results... ## Aggregating impacts... ##  ## Finished. # output_df |> glimpse() output_df |> pull(model) |> unique() ##  [1] \"Average\"       \"CCSM4\"         \"CanESM2\"       \"GCM Ensemble\"  ##  [5] \"GFDL-CM3\"      \"GISS-E2-R\"     \"HadGEM2-ES\"    \"MIROC5\"        ##  [9] \"MRI-CGCM3\"     \"Interpolation\" ### Filter to specific year c_years     <-  c(2100)  ### Filter to specific values: ### - Filter to primary sectors ### - Filter to average models/SLR scenario interpolations ### - Filter to specified years df_primary <- output_df |>   filter(sectorprimary == 1, includeaggregate >= 1) |>   filter(model %in% c(\"Average\", \"Interpolation\"))|>   filter(year %in% c_years)  ### Aggregate across impact types for each sector, calculate billions and round values to nearest dollar ### - Convert to billions of dollars ### - Round values to nearest dollar df_sumTypes <- df_primary |>    aggregate_impacts(     aggLevels = c(\"impacttype\"),      columns   = c(\"annual_impacts\")   )  ### Option: write output ### Write Full Dataframe to CSV (or feather) # write.csv(output_df, './output/example_output.csv')  ### First five lines of output dataframe # output_df[1:5,]"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"analyzeFrEDI","dir":"Articles","previous_headings":"","what":"Step 4. Analyze FrEDI","title":"Example #1","text":"following chunks provide three examples options analyze raw output dataframe FrEDI::run_fredi() Disclaimer: results provide illustrative example used analysis.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"example-1","dir":"Articles","previous_headings":"Step 4. Analyze FrEDI","what":"Example 1","title":"Example #1","text":"Extract national average economic damages (billions dollars 2015$) FrEDI sectors specified year output chunk includes snapshot subset resulting dataframe. * Note: Use sectorprimary == 1 includeaggregate >= 1 flags filter FrEDI dataframe impacts default impact sectors variants. recommendations aggregating impacts across sectors, see FrEDI Technical Documentation (Chapter 2) FrEDI::run_fredi() documentation. Example Subset 2100 Annual National Sectoral Climate-Driven Impacts","code":"### Specify groups groups1     <- c(\"sector\", \"region\", \"year\") sumCol1     <- c(\"annual_impacts\") select1     <- groups1 |> c(sumCol1)  ### Filter to specific values: ### - Filter for national aggregate results averaged across all GCMs ### - Filter to specified years ### Select specific columns df_filter1  <- df_sumTypes |>    filter(region == \"National Total\") |>   select(all_of(select1)) |>   rename(\"billions_2015$\" = annual_impacts) |>   mutate(`billions_2015$` = `billions_2015$` / 1e9) |>   mutate_at(c(\"billions_2015$\"), round, 2)  ### Display first 10 sectors df_filter1[1:10,] |>    kable(caption = \"Example *Subset* of 2100 Annual National Sectoral Climate-Driven Impacts\") |>   kable_styling(font_size = 12, full_width = F)"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"example-2","dir":"Articles","previous_headings":"Step 4. Analyze FrEDI","what":"Example 2","title":"Example #1","text":"Extract national average physical damages FrEDI sectors include physical impacts, specified year: 0utput chunk includes snapshot subset resulting dataframe. Note: Use sectorprimary == 1 includeaggregate >= 1 flags filter FrEDI dataframe impacts default impact sectors variants. recommendations aggregating impacts across sectors, see FrEDI Technical Documentation (Chapter 2) FrEDI::run_fredi() documentation. Example Subset 2100 Annual National Sectoral Climate-Driven Physical Impacts","code":"### Specify groups groups2     <- c(\"sector\", \"impactType\", \"physicalmeasure\", \"physical_impacts\", \"region\", \"year\") sumCol2     <- c(\"physical_impacts\") select2     <- groups2  |> c(sumCol2)  ### Filter to specific values: ### - Filter for national aggregate results averaged across all GCMs ### - Filter to specified years ### Select specific columns df_filter2 <- df_primary |>   filter(region == \"National Total\") |>   filter(!(is.na(physicalmeasure))) |>   mutate_at(c(sumCol2), round, 0) |>   select(all_of(select2))  ### Display first 10 rows df_filter2[c(1, 6:9, 14),] |>    kable(caption = \"Example *Subset* of 2100 Annual National Sectoral Climate-Driven Physical Impacts\") |>   kable_styling(font_size = 12, full_width = F)"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"example-3","dir":"Articles","previous_headings":"Step 4. Analyze FrEDI","what":"Example 3","title":"Example #1","text":"Extract state economic impacts FrEDI sectors specified year: output chunk includes snapshot subset resulting dataframe. Note: Use sectorprimary == 1 includeaggregate >= 1 flags filter FrEDI dataframe impacts default impact sectors variants. recommendations aggregating impacts across sectors, see FrEDI Technical Documentation (Chapter 2) FrEDI::run_fredi() documentation. Example 2100 Annual Climate-Driven Damages, State Please contact FrEDI developers additional questions.","code":"### Specify groups groups3     <- c(\"sector\", \"state\", \"year\") joinCols3   <- c(\"state\", \"year\") sumCol3     <- c(\"annual_impacts\") select3     <- groups3  |> c(sumCol3)  ### Filter to specific values: ### - Filter for national aggregate results averaged across all GCMs ### - Filter to specified years ### Select specific columns df_filter3 <- df_sumTypes |>   filter(!(region == \"National Total\")) |>   group_by_at(c(groups3)) |>   summarize_at(c(sumCol3), sum, na.rm=T) |> ungroup() |>    ###  SEE RECOMMENDATIONS FOR AGGREGATION in FrEDI TECHNICAL DOCUMENTATION ##   (function(df0){     df1 <- df0 |>        filter(sector == \"Suicide\") |>        select(-c(\"sector\")) |>       rename(impacts_suicide=annual_impacts)     df0 <- df0 |> left_join(df1, by=joinCols3)     df0 <- df0 |> mutate(impacts_suicide = case_when(impacts_suicide |> is.na() ~ 0, .default=impacts_suicide))     df0 <- df0 |> mutate(annual_impacts = case_when(       sector == \"ATS Temperature-Related Mortality\" ~ annual_impacts - impacts_suicide,       .default = annual_impacts     ))     df0 <- df0 |> select(-c(\"impacts_suicide\"))     return(df0)   })() |>   group_by_at(c(joinCols3)) |>   summarize_at(c(sumCol3), sum, na.rm=T) |> ungroup() |>    rename(\"billions_2015$\" = annual_impacts) |>   mutate(`billions_2015$` = `billions_2015$` / 1e9) |>   mutate_at(c(\"billions_2015$\"), round, 2); df_filter3 |> glimpse() ## Rows: 49 ## Columns: 3 ## $ state            <chr> \"Alabama\", \"Arizona\", \"Arkansas\", \"California\", \"Colo… ## $ year             <dbl> 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100,… ## $ `billions_2015$` <dbl> 64.43, 90.11, 36.59, 405.53, 70.17, 28.85, 9.32, 6.80… ### Display first 10 rows df_filter3[1:10,] |>    kable(caption = \"Example 2100 Annual Climate-Driven Damages, by State\") |>   kable_styling(font_size = 12, full_width = F)"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"running-fredis-social-vulnerability-module","dir":"Articles","previous_headings":"","what":"Running FrEDI’s Social Vulnerability Module","title":"Example #2","text":"vignette provides simple example run analyze data FrEDI’s SV module, default scenario, specific sector. example script: Installs FrEDI R package GitHub Sets FrEDI_SV input run parameters. Runs FrEDI_SV inputs specified Step 2 Shows example types analyses using FrEDI_SV output data. information FrEDI FrEDI_SV, see page FrEDI Technical Documentation","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"installFrEDI","dir":"Articles","previous_headings":"","what":"Step 1. Install FrEDI R package","title":"Example #2","text":"installing first time, see Installing & Running FrEDI page. Load package successfully installing FrEDI, documentation FrEDI functions can accessed way R packages. overview FrEDI’s user-defined functions, type library(help=\"FrEDI\") R console (command show documentation FrEDI even package installed). documentation specific function, type help(\"*functionName*\", package=\"FrEDI\") R console, *functionName* name one functions FrEDI (e.g., help(\"aggregate_impacts\", package=\"FrEDI\")). Alternatively, use syntax ?FrEDI::*functionName* (e.g., ?FrEDI::run_fredi_sv()). FrEDI installed, users can also search function-specific documentation RStudio Help window. Move focus Help window using keyboard shortcut Ctrl+3 toggle search field Help using Ctrl+Alt+F1. Documentation function includes examples.","code":"require(FrEDI)"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"setFrEDI","dir":"Articles","previous_headings":"","what":"Step 2. Set FrEDI_SV Runtime parameters","title":"Example #2","text":"First, use chunk specify & format input projections. Either provide paths specific files, set NULL use default projections variable Use chunk specify input trajectories (temperature, population, GDP) runtime parameters FrEDI_SV. input files specified, run_fredi_sv() use default temperature U.S. regional population projections. case, run_fredi_sv() calculate annual projected sea level rise based default temperature change. Default population scenarios based UN Median Population projection (United Nations, 2015) EPA’s ICLUSv2 model (Bierwagen et al., 2010; EPA 2017). Default temperature projections GCAM reference scenario. Current default projections U.S. national population U.S. temperature year 2090 438 million, 3.4°C respectively.  Next, set FrEDI_SV runtime parameters","code":"### To run FrEDI_SV for more than one scenario, the code below can be ### adapted into a loop to format the inputs for each scenario.   ###*********************************************** ### 1. Specify & Format Input Trajectories (temperature, population, U.S. GDP)  ### Input Files ### Population input file ### - Purpose: Specify the population trajectory to use as an input. ### - Requires columns year, region, state, postal, and pop ### - Default: if null, uses default population trajectory popInputFile <- NULL  ### * Temperature input file ### - Description: csv file with time series of temperature relative to 1986-2005 average  ### - (units: degC, values: >=0) ### - Data must start in 2000 or earlier and can be global or CONUS ### - If global, must convert to CONUS temperature using the import_inputs() helper function ### - Contains columns year, temp_C, scenario tempInputFile <- NULL  ### * Temperature type flag ### - Description: Use this to specify whether the input temperature is global or CONUS ### - import_inputs() will convert to global to CONUS temperature ### - Options: global (input is global T), conus (input is CONUS T) ### - Default: defaults to \"conus\" temptypeflag <- \"global\"   ### * Module flag ### - Description: Use this to specify for which module to import inputs  ### - Options: fredi/methane/sv  ### - Default: Defaults to \"fredi\" if NULL moduleflag   <- \"sv\"   ### Use the import_inputs() helper function to format the input trajectories for use in FrEDI inputs_list <- import_inputs(inputsList = list(     pop  = popInputFile,     temp = tempInputFile   ),   module = moduleflag ) inputs_list |> glimpse() ##  list() ### Calculate the run_fredi_sv() results for a single impact sector  ### NOTE: the run_fredi_sv() module takes a few minutes to run because ### the damages are calculated at the Census tract level and then  ### aggregated to the regional level  ### To see all available sectors, run: FrEDI::get_sv_sectorInfo()  ### Sector Flag: Specify a specific sector ### - Purpose: Specify the SV sector to calculate (can only run one sector at once) ### - Options: Run FrEDI::get_sv_sectorInfo() to get a list of the possible sectors sectorFlag  <- \"Air Quality - Premature Mortality\"    ### Silent Flag ### - Purpose: Specify the level of messaging desired ### - Options: TRUE/FALSE silentFlag <- TRUE"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"runFrEDI","dir":"Articles","previous_headings":"","what":"Step 3. Run FrEDI_SV","title":"Example #2","text":"Run FrEDI_SV using main run_fredi_sv() function Default parameter options used parameters specified run_fredi_sv(). Note: run_fredi_sv() takes longer run main module, run_fredi(), SV damage calculations conducted finer spatial scales (e.g., U.S. Census tract vs. regional level).","code":"### Run FrEDI using inputs and parameters set in Step 2 output_sv <- run_fredi_sv(   sector      = sectorFlag,    inputsList  = inputs_list,   silent      = silentFlag )   ### Glimpse results output_sv |> glimpse()  ### Option: write output ### Write Full Dataframe to CSV (or feather) # write.csv(output_sv, './output/example_output.csv')  ### First five lines of output dataframe # output_sv[1:5,]"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"analyzeFrEDI","dir":"Articles","previous_headings":"","what":"Step 4. Analyze FrEDI_SV","title":"Example #2","text":"Results FrEDI::run_fredi_sv() module can analyzed directly R Disclaimer: results provide illustrative example used analysis. Example analyses coming soon Please contact FrEDI developers additional questions.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Installing & Running FrEDI","text":"FrEDI developed R package.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"r","dir":"Articles","previous_headings":"Installation","what":"R","title":"Installing & Running FrEDI","text":"Install R Rstudio, following instructions operating system.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"fredi","dir":"Articles","previous_headings":"Installation","what":"FrEDI","title":"Installing & Running FrEDI","text":"FrEDI R package can installed using withr::with_libpaths() devtools::install_github() functions. packages installed, run: install FrEDI first time: user can specify particular github branch, including ref. included, default branch main.  installation exists following error: Downloading GitHub repo USEPA/FrEDI@ref Error utils::download.file(url, path, method = method, quiet = quiet,  :    open URL 'https://api.github.com/repos/USEPA/FrEDI/tarball/ref' Make sure withr devtools date. prompted installation, update listed R packages (e.g., Enter 1).","code":"install.packages('withr') install.packages('devtools') withr::with_libpaths(       new = .libPaths()[1],       devtools::install_github(         repo = \"USEPA/FrEDI\",           subdir = \"FrEDI\",           type = \"source\",           force = TRUE,           ref = \"v4.1\" # edit this to install a different branch of interest         )     )  library(FrEDI)"},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"running-fredi","dir":"Articles","previous_headings":"","what":"Running FrEDI","title":"Installing & Running FrEDI","text":"provide simple example steps required run FrEDI: RStudio, first load user-defined temperature, population, GDP input files. temperature file includes global temperatures, use FrEDI helper functions convert CONUS temperature. Next, run FrEDI: examples, visit Examples page.","code":"tempInputFile <- file.path(\"your_file.csv\") inputs        <- import_inputs(tempfile = tempInputFile,                                  temptype = \"global\") df_fredi_output <- run_fredi(inputsList= inputs)"},{"path":"https://usepa.github.io/FrEDI/articles/References.html","id":"documentation","dir":"Articles","previous_headings":"","what":"Documentation","title":"Documentation & Applications","text":"Publications Hartin C., E.E. McDuffie, K. Novia, M. Sarofim, B. Parthum, J. Martinich, S. Barr, J. Neumann, J. Willwerth, & . Fawcett. Advancing estimates future climate impacts within United States, 2023, Earth System Dynamics, https://esd.copernicus.org/articles/14/1015/2023/ Sarofim, M.C., Martinich, J., Neumann, J.E. et al. temperature binning approach multi-sector climate impact analysis. Climatic Change 165, 22 2021, https://doi.org/10.1007/s10584-021-03048-6 Technical Documentation FrEDI Technical Documentation Appendxi:https://www.epa.gov/cira/-fredi","code":""},{"path":"https://usepa.github.io/FrEDI/articles/References.html","id":"example-applications","dir":"Articles","previous_headings":"","what":"Example Applications","title":"Documentation & Applications","text":"Framework Evaluating Impacts Damages (FrEDI) used explore climate-related impacts United States variety future scenarios. example applications FrEDI, including recent peer-reviewed literature studies, well links several recent documents included analyses U.S. impact results informed FrEDI output, see: https://www.epa.gov/cira/fredi-publications--applications","code":""},{"path":"https://usepa.github.io/FrEDI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Corinne Hartin. Author, maintainer.            cahartin Erin McDuffie. Author, contributor.            emcduffie Marcus Sarofim. Author, contributor.            emcduffie Karen Noiva. Author, contributor.            knoiva-indecon Tony Gardella. Contributor.            tonygard-indecon Maddock. Contributor.            maddockw Hugh Easton. Contributor.            heaston-indecon","code":""},{"path":"https://usepa.github.io/FrEDI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hartin C, McDuffie E, Sarofim M, Noiva K (2024). FrEDI: Framework Evaluating Damages Impacts (FrEDI). R package version 4.2.0, https://epa.gov/cira/FrEDI/, https://github.com/USEPA/FrEDI/, https://usepa.github.io/FrEDI.","code":"@Manual{,   title = {FrEDI: The Framework for Evaluating Damages and Impacts (FrEDI)},   author = {Corinne Hartin and Erin McDuffie and Marcus Sarofim and Karen Noiva},   year = {2024},   note = {R package version 4.2.0, https://epa.gov/cira/FrEDI/, https://github.com/USEPA/FrEDI/},   url = {https://usepa.github.io/FrEDI}, }"},{"path":[]},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://usepa.github.io/FrEDI/index.html","id":"fredi-","dir":"","previous_headings":"","what":"The Framework for Evaluating Damages and Impacts (FrEDI)","title":"The Framework for Evaluating Damages and Impacts (FrEDI)","text":"repository FrEDI, Framework Evaluating Damages Impacts, developed U.S. Environmental Protection Agency (EPA). FrEDI open-source, reduced form model rapidly projects impacts climate change within United States, custom temperature policy pathway. FrEDI developed fill important gap assessing U.S. climate change impacts incorporating broad range impact studies common, open-source framework. allows FrEDI facilitate comparability across impact studies, flexibility facilitating custom scenario analyses. FrEDI continually developed currently draws upon 30 existing peer-reviewed studies, including Climate Change Impacts Risk Analysis (CIRA) project, estimate relationship future degrees warming impacts across 20 category sectors, 48 U.S. states plus District Columbia, population groups. supplied user-defined temperature trajectory, FrEDI applies temperature-impact relationships rapidly project annual climate change impacts damages end 21st century. Recommended Citation: EPA 2024. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). U.S. Environmental Protection Agency, EPA 430-R-24-001. Available : https://www.epa.gov/cira/fredi. EPA Disclaimer United States Environmental Protection Agency (EPA) GitHub project code provided “” basis user assumes responsibility use. EPA relinquished control information longer responsibility protect integrity, confidentiality, availability information. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring EPA. EPA seal logo shall used manner imply endorsement commercial product activity EPA United States Government. submitting pull request GitHub /installing package, make agreement EPA submit claim compensation services rendered EPA federal agency. , agree charge time spend developing software code related project federal grant cooperative agreement.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"Summarize aggregate impacts run_fredi() (calculate national totals, average across models, sum impact types, interpolate impact estimate years).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"","code":"aggregate_impacts(   data,   aggLevels = c(\"national\", \"modelaverage\", \"impacttype\", \"impactyear\"),   columns = c(\"physical_impacts\", \"annual_impacts\"),   groupByCols = c(c(c(c(\"sector\", \"variant\", \"impactType\", \"impactYear\"), \"region\",     \"state\", \"postal\"), \"model_type\", \"model\"), \"includeaggregate\", \"sectorprimary\"),   silent = TRUE )"},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"data Data frame results FrEDI (outputs run_fredi()) aggLevels Levels aggregation summarize data: one c(\"national\", \"modelAverage\", \"impactYear\", \"impactType\", \"\" ). Defaults levels (.e., aggLevels = \"\"). Note , \"impacttype\" aggLevels (e.g., aggLevels = \"\"), column \"physical_measure\" dropped groupByCols column \"physical_impacts\" dropped columns. aggregating impact types sectors requires summing costs different types physical impacts, reporting physical impacts nonsensical. columns Character vector columns aggregate results (defaults columns = c( \"physical_impacts\", \"annual_impacts\")). groupByCols Character vector indicating columns use grouping. Defaults groupByCols = c(\"sector\", \"variant\", \"impactYear\", \"impactType\", \"model_type\", \"model\", \"sectorprimary\", \"includeaggregate\", \"physicalmeasure\", \"region\", \"state\", \"postal\"). Note \"variant\" column referred contains information variant adaptation name (“N/”), applicable.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"function can used aggregate summarize FrEDI results levels aggregation specified user (passed aggLevels). Users can specify aggregation levels specifying aggLevels = \"\" (default) aggregation levels (aggLevels = \"none\"). Users can specify single aggregation level multiple aggregation levels passing single character string character vector aggLevels. Options aggregation include calculating national totals (aggLevels= \"national\"), averaging across model types models (aggLevels = \"modelAverage\"), summing impact types (aggLevels = \"impactType\"), interpolating impact year estimates (aggLevels = \"impactYear\"). aggregating impacts national totals /model averages, aggregate_impacts() drop pre-summarized results (.e., values region = \"National Total\" /model = \"Average\", respectively) already present data re-summarize results respective levels. users specify aggLevels = \"none\", aggregate_impacts() returns data frame passed data argument. users specify aggLevels = \"\" combinations aggregation levels, aggregate_impacts() function uses performs following calculations using grouping columns specified groupByCols argument: \"sector\", \"variant\", \"impactType\", \"impactYear\", \"region\", \"state\", \"postal\", \"model_type\", \"model\", \"sectorprimary\", \"includeaggregate\", \"physicalmeasure\", \"year\". aggregating values, aggregate_impacts() joins data frame impacts information \"driverType\", \"driverUnit\", \"driverValue\", \"gdp_usd\", \"national_pop\", \"gdp_percap\", \"state_pop\".","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"","code":"### Create temperature binning scenario df_results1 <- run_fredi(aggLevels=\"none\", silent=TRUE) #> Checking scenarios... #> Calculating impacts... #> \t\tFormatting initial results... #> \t\tCalculating temperature-driven scaled impacts... #> \t\tCalculating SLR-driven scaled impacts... #> Formatting results... #>  #> Finished.  ### Aggregate temperature binning summary across multiple columns df_results2 <- df_results1 |> aggregate_impacts(columns=c(\"annual_impacts\"), aggLevels=\"all\")"},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"pre-processing helper function converts list warming temperatures degrees Celsius (temps) global CONUS (=\"global\") vice versa (=\"conus\"). equations converting CONUS global temperatures back described elsewhere report.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"","code":"convertTemps(temps, from)"},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"temps numeric vector CONUS global temperatures degrees Celsius. character string (one  c(\"conus\", \"global\")), indicating whether users converting CONUS global temperatures (=\"conus\") global CONUS (=\"global\"). Temperatures contiguous U.S. (CONUS) degrees Celsius converted global temperatures (convertTemps(temps, =\"conus\")) degrees Celsius multiplying CONUS temperatures constant 1/k (k=1.421). Global temperatures degrees Celsius converted CONUS temperatures (convertTemps(temps, =\"global\")) degrees Celsius multiplying global temperatures constant k (k=1.421).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"Outputs numeric vector temperatures degrees Celsius.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"","code":"convertTemps(1:7, from = \"global\") #> [1] 1.421 2.842 4.263 5.684 7.105 8.526 9.947 convertTemps(1:7, from = \"conus\") #> [1] 0.7037298 1.4074595 2.1111893 2.8149191 3.5186488 4.2223786 4.9261084"},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":null,"dir":"Reference","previous_headings":"","what":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"FrEDI R package developed maintained U.S. Environmental Protection Agency (EPA). functions data provided package can used project impacts climate change within contiguous United States (CONUS), custom temperature socioeconomic trajectory, using Framework Evaluating Damages Impacts (FrEDI) developed part EPA's Climate Change Impacts Risk Analysis (CIRA) project. FrEDI package contains R code implements FrEDI allows users project annual impacts climate change sea level rise across 20 impact sectors, geographic regions, populations end 21st century (optionally 2300). framework currently account ways American public may impacted future climate change, type detailed information helps EPA better understand communicate types potential impacts risks future climate change United States, well potential benefits greenhouse gas mitigation adaptation.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"See FrEDI Technical Documentation additional information underlying theory, design, structure, components, capabilities FrEDI, well examples intended uses applications. help getting started FrEDI, visit https://usepa.github.io/FrEDI/articles/manual.html. additional package documentation, see https://usepa.github.io/FrEDI/index.html.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"overview-of-functions","dir":"Reference","previous_headings":"","what":"Overview of Functions","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"function run_fredi() provided package primary function implementing Framework Evaluating Damages Impacts (FrEDI), developed U.S. EPA projecting annual climate impacts. main inputs run_fredi() climate scenarios (temperature degrees Celsius, global mean sea level rise centimeters) socioeconomic scenarios (U.S. gross domestic product, state population). FrEDI also contains functions assist pre-processing input scenarios post-processing outputs. Pre-processing functions include get_sectorInfo(), import_inputs(), convertTemps(), temps2slr(). get_sectorInfo() allows users access list sectors within FrEDI related sector information. import_inputs() helps users importing custom scenarios user-specified comma-separated value (CSV) files. convertTemps() helps users convert global mean temperature temperatures contiguous United States (CONUS) (degrees Celsius). temps2slr() helps users estimate global mean sea level rise (GMSL, centimeters) global mean temperature degrees Celsius. aggregate_impacts() post-processing helper function helps users aggregate summarize outputs FrEDI. aggregate_impacts() can used calculate national totals, model averages, sum impact types, interpolate multiple impact years (note run_fredi() automatically run aggregate_impacts() returning outputs aggLevels argument \"none\"). Versions 2.3.0 include FrEDI Social Vulnerability (SV) module estimating impacts socially vulnerable populations select sectors. get_sv_sectorInfo() allows users access list sectors within FrEDI SV module related sector information. function run_fredi_sv() main function FrEDI SV module. run_fredi_sv() designed calculate impacts single sector time custom population scenario one custom temperature sea level rise scenarios. information data underlying FrEDI SV module, see https://www.epa.gov/cira/social-vulnerability-report/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"overview-of-package-contents","dir":"Reference","previous_headings":"","what":"Overview of Package Contents","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"FrEDI consists files following directories: R. Contains function definitions (files ending \".R\") configuration files (ending \".rda\"). data. Contains R Data files ending \".rdb\", \".rds\", \".rdx\", containing data included package. help html. Contain documentation functions available user, including function descriptions, lists arguments outputs, examples. See \"html/00Index.html\" individual R help functions information individual functions. Meta. Contains RDS files (ending \".rds\") information package contents. extdata. extdata/scenarios Contains four CSV files users test function importing data. information importing scenarios use run_fredi(), refer documentation function import_inputs(). \"GCAM_scenario.csv\" contains set temperature scenarios can used FrEDI, including default temperature scenario used run_fredi() run_fredi_sv(). Also see documentation gcamScenarios dataset information. \"State ICLUS Population.csv\" contains default state population scenario used run_fredi() (see popScenario popScenario_sv). \"slr_from_GCAM.csv\" contains global mean sea level rise heights centimeters (created reference temperature scenario). extdata/sv Contains files used FrEDI SV module calculate impacts. FrEDI package contains loadable dataset default results defaultResults, contains annual impacts produced run_fredi() default options default scenarios (.e., default temperature, GDP, state population trajectories). loadable datasets provided FrEDI set driver scenarios (gcamScenarios) state population scenario (popScenario) use run_fredi() run_fredi_sv(), can loaded workspace using data() function (e.g., data(gcamScenarios)). Typical use involve library(FrEDI) require(FrEDI).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"status","dir":"Reference","previous_headings":"","what":"Status","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"Disclaimer: code repository provided \"draft\" state reviewed cleared U.S. EPA. status updated models reviewed.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"dependencies","dir":"Reference","previous_headings":"","what":"Dependencies","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"FrEDI requires R (>= 4.2.0). FrEDI depends : tidyverse (Easily Install Load 'Tidyverse'). official documentation tidyverse can found . tidyverse can installed using install.packages(\"tidyverse\"), see link information. ggpubr ('ggplot2' Based Publication Ready Plots). official documentation ggpubr can found . ggpubr can installed using install.packages(\"ggpubr\"), see link information. openxlsx (Read, Write Edit xlsx Files). official documentation openxlsx can found . openxlsx can installed using install.packages(\"openxlsx\").","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"license","dir":"Reference","previous_headings":"","what":"License","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"repository released MIT License.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"epa-disclaimer","dir":"Reference","previous_headings":"","what":"EPA Disclaimer","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"United States Environmental Protection Agency (EPA) GitHub project code provided \"\" basis user assumes responsibility use. EPA relinquished control information longer responsibility protect integrity, confidentiality, availability information. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring EPA. EPA seal logo shall used manner imply endorsement commercial product activity EPA United States Government. submitting pull request GitHub /installing package, make agreement EPA submit claim compensation services rendered EPA federal agency. , agree charge time spend developing software code related project federal grant cooperative agreement.","code":""},{"path":[]},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"Maintainer: Corinne Hartin hartin.corinne@epa.gov (ORCID) (cahartin) Authors: Erin McDuffie mcduffie.erin.e@epa.gov (ORCID) (emcduffie) [contributor] Marcus Sarofim mcduffie.erin.e@epa.gov (ORCID) (emcduffie) [contributor] Karen Noiva (ORCID) (knoiva-indecon) [contributor] contributors: Tony Gardella (ORCID) (tonygard-indecon) [contributor] Maddock (ORCID) (maddockw) [contributor] Hugh Easton (ORCID) (heaston-indecon) [contributor]","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","title":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","text":"gcamScenarios data frame object containing six driver scenarios can passed inputs run_fredi() run_fredi_sv(). data frame five columns -- year, temp_C_global, temp_C_conus, slr_cm, scenario, model:","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","text":"","code":"gcamScenarios"},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","text":"data frame 606 rows 6 columns: year Year temp_C_global Global temperatures, degrees Celsius, associated year scenario temp_C_conus Temperatures contiguous U.S. (CONUS), degrees Celsius, associated year scenario (converted global temperatures using convertTemps(=\"global\")) slr_cm Global Mean Sea Level Rise (GMSL SLR), centimeters, associated year scenario (calculated global temperatures using temps2slr()) scenario Associated scenario identifier (e.g., \"ECS_3.0_REF\") model string (\"Hector_GCAM_v5.3\") identifying model (Hector, GCAM v5.3) used generating global temperatures associated scenario","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","text":"https://epa.gov/cira/FrEDI/","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","text":"year Common Era (CE) year associated observation. temp_C_global Global temperature (.e., degrees warming baseline year 1995), degrees Celsius, associated year scenario. temp_C_conus Temperatures (.e., degrees warming baseline year 1995) contiguous U.S. (CONUS), degrees Celsius, associated year scenario (calculated global temperatures using convertTemps(=\"global\")). slr_cm Global Mean Sea Level Rise (GMSL SLR), centimeters, associated year scenario (calculated global temperatures using temps2slr()). scenario Associated scenario identifier (e.g., \"ECS_3.0_REF\"). model string (\"Hector_GCAM_v5.3\") identifying model (Hector, GCAM v5.3) used generating global temperatures associated scenario. scenarios data frame created using Hector GCAM v5.3: Hector open-source, reduced-form global carbon-cycle climate model (Hartin et al., 2015) used model temperatures associated emissions scenarios Global Change Analysis Model v5.3 (GCAM). GCAM v5.3 -- .e., Global Change Analysis Model v5.3 -- open source model represents linkages energy, water, land, climate economic systems (Calvin et al., 2019). Scenario identifiers scenario column gcamScenarios() string \"ECS_3.0_REF_\" prefix, followed suffix indicating emissions intensity associated scenario (e.g., \"20\") -- instance, default scenario run_fredi() run_fredi_sv() \"ECS_3.0_REF\". scenarios include \"ECS_3.0_REF_20\", \"ECS_3.0_REF_30\", \"ECS_3.0_REF_50\", \"ECS_3.0_REF_70\", \"ECS_3.0_REF_90\". Users can use scenarios gcamScenarios inputs FrEDI FrEDI SV Module: Users can filter gcamScenarios data frame six scenarios, can passed directly run_fredi() function via named element (temp /slr) list passed inputsList argument -- e.g., run_fredi(inputsList=list(temp=gcamScenarios |> filter(scenario==\"ECS_3.0_REF\"))) run using default temperature scenario. GCAM scenarios can passed directly FrEDI SV module via run_fredi_sv() function via named list element (temp /slr) list passed inputsList argument -- e.g., run_fredi_sv(inputsList=list(temp=gcamScenarios)) run SV module GCAM scenarios provided gcamScenarios. gcamScenarios can also combined provided scenarios (gdpDefault, popDefault) function calls (e.g., run_fredi(inputsList=list(temp=gcamScenarios |> filter(scenario==\"ECS_3.0_REF\"), gdp=gdpDefault, pop=popDefault))) user-provided data frames. information, see documentation run_fredi(), FrEDI:run_fredi_sv(), FrEDI:run_fredi_methane(), import_inputs(). Calvin, K., Patel, P., Clarke, L., et al. 2019. GCAM v5.1: representing linkages energy, water, land, climate, economic systems, Geosci. Model Dev., 12:677–698. https://doi.org/10.5194/gmd-12-677-2019. Hartin, C.., Patel, P., Schwarber, ., Link, R.P. Bond-Lamberty, B.P., 2015. simple object-oriented open-source model scientific policy analyses global climate system–Hector v1. 0. Geoscientific Model Development, 8(4), pp.939-955.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gdpDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario with values for U.S. Gross Domestic Product (GDP), which can be passed as an input to run_fredi() or run_fredi_methane(). — gdpDefault","title":"Scenario with values for U.S. Gross Domestic Product (GDP), which can be passed as an input to run_fredi() or run_fredi_methane(). — gdpDefault","text":"gdpDefault data frame object containing values U.S. GDP contiguous U.S. (CONUS) period 2010 2100. Values MIT Economic Projection Policy Analysis Version 6 (EPPA v6) model (Chen et al, 2015; EPA 2017). ch4Default data frame object contains projections changes annual US methane concentrations, national level, period 2020 2100. Values changes annual US methane concentrations provided parts per billion volume (ppbv) relative 1995-2006 baseline era. scenario represents SSP245 mean emissions pathway RCMIP5, methane concentrations produced using FaIR model. information SSP245 mean emissions pathway FaIR model, see Nichols et al. (2020) Leach, et al. (2021), respectively.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gdpDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario with values for U.S. Gross Domestic Product (GDP), which can be passed as an input to run_fredi() or run_fredi_methane(). — gdpDefault","text":"","code":"gdpDefault  gdpDefault"},{"path":"https://usepa.github.io/FrEDI/reference/gdpDefault.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Scenario with values for U.S. Gross Domestic Product (GDP), which can be passed as an input to run_fredi() or run_fredi_methane(). — gdpDefault","text":"data frame 91 rows 2 columns: year Year gdp_usd U.S. Gross Domestic Product contiguous U.S. object class tbl_df (inherits tbl, data.frame) 291 rows 2 columns.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gdpDefault.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Scenario with values for U.S. Gross Domestic Product (GDP), which can be passed as an input to run_fredi() or run_fredi_methane(). — gdpDefault","text":"https://epa.gov/cira/FrEDI/ https://epa.gov/cira/FrEDI/","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gdpDefault.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario with values for U.S. Gross Domestic Product (GDP), which can be passed as an input to run_fredi() or run_fredi_methane(). — gdpDefault","text":"use gdpDefault input FrEDI /FrEDI Methane module, pass data frame via named element gdp list passed inputsList argument function calls run_fredi() /FrEDI:run_fredi_methane(), respectively, e.g.: run_fredi(inputsList=list(gdp=gdpDefault)). gdpDefault can also combined provided scenarios (gcamScenarios, popDefault) function calls (e.g., run_fredi(inputsList=list(gdp=gdpDefault, pop=popDefault))) user-provided data frames. information, see documentation run_fredi(), FrEDI:run_fredi_methane(), import_inputs(). Chen, Y.-H. H., S. Paltsev, J. M. Reilly, J. F. Morris, M. H. Babiker. 2015. MIT EPPA6 Model: conomic Growth, Energy Use, Food Consumption. MIT Joint Program Science Policy Global Change, . 278. EPA. 2017. Multi-Model Framework Quantitative Sectoral Impacts Analysis: technical report Fourth National Climate Assessment. U.S. Environmental Protection Agency, EPA 430-R-17-001. use ch4Default input FrEDI Methane module, pass data frame via named element ch4 list passed inputsList argument function calls FrEDI:run_fredi_methane(), e.g.: run_fredi_methane(inputsList=list(ch4=ch4Default)). ch4Default can also combined provided scenarios (gdpDefault, popDefault) function calls (e.g., run_fredi(inputsList=list(gdp=gdpDefault, pop=popDefault))) user-provided data frames. information, see documentation FrEDI:run_fredi_methane(), import_inputs(). Leach, N. J., Jenkins, S., Nicholls, Z., Smith, C. J., Lynch, J., Cain, M., Walsh, T., Wu, B., Tsutsui, J., Allen, M. R. 2021. FaIRv2.0.0: generalized impulse response model climate uncertainty future scenario exploration, Geosci. Model Dev., 14, 3007--3036, https://doi.org/10.5194/gmd-14-3007-2021. Nicholls, Z. R. J., Meinshausen, M., Lewis, J., Gieseke, R., Dommenget, D., Dorheim, K., Fan, C.-S., Fuglestvedt, J. S., Gasser, T., Goluke, U., Goodwin, P., Hartin, C., Hope, . P., Kriegler, E., Leach, N., Marchegiani, D., McBride, L. ., Quilcaille, Y., Rogelj, J., Xie, Z. (2020). Reduced Complexity Model Intercomparison Project Phase 1: introduction evaluation global-mean temperature response. Geoscientific Model Development. 13. 5175-5190. 10.5194/gmd-13-5175-2020. Environmental Protection Agency (EPA). Forthcoming. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/. @format data frame 81 rows 2 columns: year Year CH4_ppbv Change U.S. methane concentrations, parts per billion volume (ppbv), relative 1995-2006 baseline era.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"This function provides information about the sectors in FrEDI. — get_sectorInfo","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"helper function returns character vector sector names (default) data frame sectors related information (e.g., associated variants, impact types, etc.), user can supply run_fredi() sectorList argument.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"","code":"get_sectorInfo(description = F, gcmOnly = F, slrOnly = F)"},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"description = FALSE. Logical value indicating whether include information sector. Returns dataframe description=TRUE returns character vector sector names description=FALSE (default). gcmOnly = FALSE. Logical value indicating whether return sectors climate impacts modeled using global climate model (GCM) results. slrOnly = FALSE. Logical value indicating whether return sectors climate impacts modeled using sea level rise (SLR) scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"description=FALSE (default), outputs character vector containing names sectors available FrEDI. description=TRUE, `, outputs dataframe containing names sectors available FrEDI one column, information sector model type, variants, impact years, impact types remaining columns.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"description=FALSE (default), helper function returns character vector sector names, user can supply sectorList argument run_fredi(). description=TRUE, get_sectorInfo() returns dataframe sectors related information returns dataframe containing sectors available FrEDI along additional information. Sector names first column, additional columns associated model type (\"GCM\" \"SLR\"), variants, impact years, impact types remaining columns. Variants, impact years, impact types vary sector. Users can specify whether return GCM sectors SLR sectors setting gcmOnly=TRUE slrOnly=TRUE, respectively. get_sectorInfo() return sectors form specified description (see ).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"","code":"### Return a character vector with the names of all of the sectors in FrEDI: get_sectorInfo() #>  [1] \"ATS Temperature-Related Mortality\"              #>  [2] \"Asphalt Roads\"                                  #>  [3] \"CIL Agriculture\"                                #>  [4] \"CIL Crime\"                                      #>  [5] \"CIL Temperature-Related Mortality\"              #>  [6] \"Climate-Driven Changes in Air Quality\"          #>  [7] \"Coastal Properties\"                             #>  [8] \"Electricity Demand and Supply\"                  #>  [9] \"Electricity Transmission and Distribution\"      #> [10] \"Extreme Temperature\"                            #> [11] \"Inland Flooding\"                                #> [12] \"Labor\"                                          #> [13] \"Marine Fisheries\"                               #> [14] \"Rail\"                                           #> [15] \"Roads\"                                          #> [16] \"Southwest Dust\"                                 #> [17] \"Suicide\"                                        #> [18] \"Transportation Impacts from High Tide Flooding\" #> [19] \"Urban Drainage\"                                 #> [20] \"Valley Fever\"                                   #> [21] \"Vibriosis\"                                      #> [22] \"Water Quality\"                                  #> [23] \"Wildfire\"                                       #> [24] \"Wind Damage\"                                    #> [25] \"Winter Recreation\"                               ### Return a dataframe of all of the sectors in FrEDI (sector names and additional information) get_sectorInfo(description=T, gcmOnly=T) #>                                       sector include model_type #> 1          ATS Temperature-Related Mortality       1        GCM #> 2                              Asphalt Roads       1        GCM #> 3                            CIL Agriculture       1        GCM #> 4                                  CIL Crime       1        GCM #> 5          CIL Temperature-Related Mortality       1        GCM #> 6      Climate-Driven Changes in Air Quality       1        GCM #> 7              Electricity Demand and Supply       1        GCM #> 8  Electricity Transmission and Distribution       1        GCM #> 9                        Extreme Temperature       1        GCM #> 10                           Inland Flooding       1        GCM #> 11                                     Labor       1        GCM #> 12                          Marine Fisheries       1        GCM #> 13                                      Rail       1        GCM #> 14                                     Roads       1        GCM #> 15                            Southwest Dust       1        GCM #> 16                                   Suicide       1        GCM #> 17                            Urban Drainage       1        GCM #> 18                              Valley Fever       1        GCM #> 19                                 Vibriosis       1        GCM #> 20                             Water Quality       1        GCM #> 21                                  Wildfire       1        GCM #> 22                               Wind Damage       1        GCM #> 23                         Winter Recreation       1        GCM #>                                                               variants #> 1              Mean, Low Confidence Interval, High Confidence Interval #> 2                                                                  N/A #> 3                    With CO2 Fertilization, Without CO2 Fertilization #> 4                                                                  N/A #> 5            Median, Low Confidence Interval, High Confidence Interval #> 6                                       2011 Emissions, 2040 Emissions #> 7                                                                  N/A #> 8  No Additional Adaptation, Proactive Adaptation, Reactive Adaptation #> 9                                 Adaptation, No Additional Adaptation #> 10                                                                 N/A #> 11                                                                 N/A #> 12                                                                 N/A #> 13 No Additional Adaptation, Proactive Adaptation, Reactive Adaptation #> 14 No Additional Adaptation, Proactive Adaptation, Reactive Adaptation #> 15                                                                 N/A #> 16                                                                 N/A #> 17                                                                 N/A #> 18                                                                 N/A #> 19                                                                 N/A #> 20                                                                 N/A #> 21                                                                 N/A #> 22                                                                 N/A #> 23                                                                 N/A #>    impactYears #> 1           NA #> 2           NA #> 3           NA #> 4           NA #> 5           NA #> 6           NA #> 7           NA #> 8           NA #> 9   2010, 2090 #> 10          NA #> 11          NA #> 12          NA #> 13          NA #> 14          NA #> 15  2010, 2090 #> 16          NA #> 17          NA #> 18          NA #> 19          NA #> 20          NA #> 21          NA #> 22          NA #> 23  2010, 2090 #>                                                                                   impactTypes #> 1                                                                                         N/A #> 2                                                                                         N/A #> 3                                                               Cotton, Maize, Soybean, Wheat #> 4                                                                           Property, Violent #> 5                                                                                         N/A #> 6                                                                                Ozone, PM2.5 #> 7                                                                                         N/A #> 8                                                                                         N/A #> 9                                                                                   Cold, Hot #> 10                                                                                        N/A #> 11                                                                                        N/A #> 12                                                                                        N/A #> 13                                                                                        N/A #> 14                                                                                        N/A #> 15 Acute Myocardial Infarction, All Cardiovascular, All Mortality, All Respiratory, Asthma ER #> 16                                                                                        N/A #> 17                                                                                        N/A #> 18                                                           Lost Wages, Morbidity, Mortality #> 19                                                  Direct Medical Cost, Lost Days, Mortality #> 20                                                                                        N/A #> 21                                                       Morbidity, Mortality, Response Costs #> 22                                                                                        N/A #> 23                                          Alpine Skiing, Cross-Country Skiing, Snowmobiling  ### Return a character vector with only the names of the temperature-driven sectors: get_sectorInfo(gcmOnly=T) #>  [1] \"ATS Temperature-Related Mortality\"         #>  [2] \"Asphalt Roads\"                             #>  [3] \"CIL Agriculture\"                           #>  [4] \"CIL Crime\"                                 #>  [5] \"CIL Temperature-Related Mortality\"         #>  [6] \"Climate-Driven Changes in Air Quality\"     #>  [7] \"Electricity Demand and Supply\"             #>  [8] \"Electricity Transmission and Distribution\" #>  [9] \"Extreme Temperature\"                       #> [10] \"Inland Flooding\"                           #> [11] \"Labor\"                                     #> [12] \"Marine Fisheries\"                          #> [13] \"Rail\"                                      #> [14] \"Roads\"                                     #> [15] \"Southwest Dust\"                            #> [16] \"Suicide\"                                   #> [17] \"Urban Drainage\"                            #> [18] \"Valley Fever\"                              #> [19] \"Vibriosis\"                                 #> [20] \"Water Quality\"                             #> [21] \"Wildfire\"                                  #> [22] \"Wind Damage\"                               #> [23] \"Winter Recreation\"                          ### Run FrEDI for only the temperature-driven sectors and view results: df_x <- run_fredi(sectorList=get_sectorInfo(gcmOnly=T)) #> Checking scenarios... #> Calculating impacts... #> \t\tFormatting initial results... #> \t\tCalculating temperature-driven scaled impacts... #> Formatting results... #> Aggregating impacts... #>  #> Finished."},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"get_sv_sectorInfo returns character vector names sectors FrEDI Social Vulnerability (SV) module (default) data frame SV sectors additional information (e.g., associated variants, model type, etc.).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"","code":"get_sv_sectorInfo(description = F, gcmOnly = F, slrOnly = F)"},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"description Logical value indicating whether include information sector. Returns data frame description=TRUE returns character vector sector names description=FALSE (default). gcmOnly Logical value indicating whether return sectors climate impacts modeled using global climate model (GCM) results. slrOnly Logical value indicating whether return sectors climate impacts modeled using sea level rise (SLR) scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"get_sv_sectorInfo() return SV sectors form specified description: description=FALSE (default), outputs character vector containing names sectors available FrEDI SV Module. description=TRUE, outputs data frame containing names sectors available FrEDI SV Module one column, information sector model type, model type (\"GCM\" \"SLR\") associated driver unit (\"degrees Celsius\" \"cm\", respectively ), impact units (e.g., mortality, etc.), available variants remaining columns.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"get_sv_sectorInfo returns character vector names sectors FrEDI SV module (description=FALSE, default) data frame SV sectors additional information (description=TRUE). description=FALSE (default), get_sv_sectorInfo returns character vector names sectors can passed run_sv_fredi() sector argument. Specify whether return GCM sectors running get_sv_sectorInfo(gcmOnly=TRUE) SLR sectors running get_sv_sectorInfo(slrOnly=TRUE). description=TRUE, get_sv_sectorInfo returns data frame sectors related information, whether particular sector driven primarily temperature (modelType=\"GCM\") sea level rise (modelType=\"SLR\"), associated driver units (\"degrees Celsius\" temperature-driven sectors, \"cm\" SLR-driven sectors), impact units (e.g., mortality, etc.), sector variants. Users can use get_sv_sectorInfo determine sectors can passed run_sv_fredi() sector argument /determine whether particular sector driven primarily temperature (modelType=\"GCM\") sea level rise (modelType=\"SLR\"). Users can specify whether return GCM sectors setting gcmOnly=TRUE SLR sectors setting slrOnly=TRUE.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"","code":"### Return a character vector with the names of all of the sectors in the FrEDI SV Module: get_sv_sectorInfo() #> [1] \"Air Quality - Childhood Asthma\"                 #> [2] \"Air Quality - Premature Mortality\"              #> [3] \"Coastal Properties\"                             #> [4] \"Extreme Temperature\"                            #> [5] \"Labor\"                                          #> [6] \"Roads\"                                          #> [7] \"Transportation Impacts from High Tide Flooding\"  ### Return a data frame of all of the sectors in the FrEDI SV Module (sector names and additional information) get_sv_sectorInfo(description=T) #>                                           sector modelType      driverUnit #> 1                 Air Quality - Childhood Asthma       GCM degrees Celsius #> 2              Air Quality - Premature Mortality       GCM degrees Celsius #> 3                             Coastal Properties       SLR              cm #> 4                            Extreme Temperature       GCM degrees Celsius #> 5                                          Labor       GCM degrees Celsius #> 6                                          Roads       GCM degrees Celsius #> 7 Transportation Impacts from High Tide Flooding       SLR              cm #>                                        impactUnit #> 1                          Childhood asthma cases #> 2                             Premature Mortality #> 3 Individuals threatened with total property loss #> 4                                       Mortality #> 5                             Hours of labor lost #> 6                                  Hours of delay #> 7                                  Hours of delay #>                              variants #> 1                                 N/A #> 2                                 N/A #> 3 Without Adaptation, With Adaptation #> 4                                 N/A #> 5                                 N/A #> 6 No Adaptation, Proactive Adaptation #> 7 Without Adaptation, With Adaptation  ### Return a character vector with only the names of the temperature-driven sectors: get_sv_sectorInfo(gcmOnly=T) #> [1] \"Air Quality - Childhood Asthma\"    \"Air Quality - Premature Mortality\" #> [3] \"Extreme Temperature\"               \"Labor\"                             #> [5] \"Roads\"                              ### Return a character vector with only the names of the temperature-driven sectors: get_sv_sectorInfo(slrOnly=T) #> [1] \"Coastal Properties\"                             #> [2] \"Transportation Impacts from High Tide Flooding\""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"function enables users import data custom scenarios use run_fredi(). Users specify path names CSV files containing temperature, global mean sea level rise (GMSL), gross domestic product (GDP), state population scenarios. import_inputs() reads format specified files data frames returns list data frames imported scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"","code":"import_inputs(   inputsList = list(gdp = NULL, pop = NULL, temp = NULL, slr = NULL, ch4 = NULL, nox =     NULL, o3 = NULL),   temptype = \"conus\",   popArea = \"state\",   module = \"fredi\" )"},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"inputsList=list(gdp=NULL, pop=NULL, temp=NULL, slr=NULL, ch4=NULL, nox=NULL) named list containing file paths CSV files containing scenarios: gdp character string indicating location CSV file containing custom scenario U.S. gross domestic product (GDP), use run_fredi() run_fredi_methane(). first column CSV named \"year\" contains years associated GDP estimates; second column (named \"gdp_usd\") contain values U.S. GDP 2015 U.S. dollars  (2015$ USD). GDP scenario must start 2010 earlier end maximum model run year (e.g., specified maxYear argument run_fredi() run_fredi_methane()). Values GDP column \"gdp_usd\" must greater equal zero. pop character string indicating location CSV file containing custom population scenario states NCA regions, use run_fredi(), run_fredi_sv(), run_fredi_methane(). first column named \"year\" contain years interval 2010 2300. second column called \"pop\" contain population values. Whether third column required depends geographical scale data, specified popArea argument (information, see popArea argument, . popArea = \"state\", third column called \"state\" contain name state associated population estimate given year. popArea = \"regional\", third column called \"region\" contain NCA Region label associated population estimate given year. popArea = \"national\", year pop columns required. popArea = \"state\", file must contain estimates CONUS states -- .e., states except Alaska Hawaii must present input file (estimates Alaska Hawaii optional). popArea = \"regional\", file must contain estimates seven NCA regions. population scenario must start 2010 earlier end maximum model run year (e.g., specified maxYear argument run_fredi() run_fredi_methane()). Values population column \"pop\" must greater equal zero. temp character string indicating location CSV file containing custom temperature scenario, use run_fredi() run_fredi_sv(). first column CSV named \"year\" contain years associated temperature estimates; second column (named \"temp_C\") contain values temperatures (.e., degrees warming relative baseline era 1986-2005), degrees Celsius. temperature scenario must start 2000 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). slr character string indicating location CSV file containing custom sea level rise scenario, use run_fredi() run_fredi_sv(). first column CSV named \"year\" contain years associated sea level rise estimates; second column named \"slr_cm\" contain values global mean sea level rise (GMSL), centimeters, baseline year 2000. SLR scenario must start 2000 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). o3 character string indicating location CSV file containing custom scenario changes U.S. state-level ozone concentrations (relative 1986-2005 baseline era). input ozone scenario requires changes annual state-level ozone concentrations, GCM model, parts per trillion volume (pptv) relative 1986-2005 baseline era. words, input ozone scenario requires ozone concentrations specific state, GCM model, year analysis. o3 input requires data frame object six columns names \"region\", \"state\", \"postal\", \"model\", \"year\", \"O3_pptv\"  containing region name (\"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\" CONUS states, \"Alaska\" \"Hawaii\" Alaska Hawaii, respectively), state name, two-character postal code abbreviation state, GCM model name (\"CanESM2\", \"GFDL-CM3\", \"GISS-E2-R\", \"HadGEM2-ES\", /\"MIROC5\"), year, change ozone concentration (pptv) relative 1986-2005 baseline era. Ozone inputs must least one non-missing value 2020 earlier least one non-missing value final analysis year (specified maxYear argument). ch4 character string indicating location CSV file containing custom scenario changes U.S. methane concentrations (relative 1986-2005 baseline era), national level, use run_fredi_methane(). first column CSV named \"year\" contain years associated national methane estimates; second column named \"CH4_ppbv\" contain values methane. methane scenario must start 2020 earlier end maximum model run year (e.g., specified maxYear argument run_fredi_methane()). nox character string indicating location CSV file containing custom scenario U.S. NOx emission values, national level. first column CSV named \"year\" contain years associated national NOx estimates; second column named \"Mt\" contain values NOx emissions, megatons per year (Mt). NOx scenario must start 2020 earlier end maximum model run year (e.g., specified maxYear argument run_fredi_methane()). temptype=\"conus\" character string indicating whether temperature values temperature input file (specified tempfile) represent temperature changes, degrees Celsius, global level (temptype = \"global\") contiguous U.S. (CONUS) (temptype = \"conus\", default). popArea=\"state\" character string indicating geographical scale population inputs (specified popfile). Specify one : \"state\", state-level population (default); \"conus\", contiguous U.S. (CONUS) (.e., national totals, excluding Alaska Hawaii); \"national\", national totals (CONUS population, including Alaska Hawaii).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"import_inputs() returns list named elements containing data frames custom scenarios temperature, GMSL, GDP, regional population, respectively:","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"function enables users import data custom scenarios use temperature binning. Users provide named list specifying path names CSV files containing scenarios gross domestic product (GDP) (use run_fredi() run_fredi_methane()); population (use run_fredi(), run_fredi_sv(), run_fredi_methane()); temperature /global mean sea level rise (GMSL) (use run_fredi() run_fredi_sv()); methane NOx (use run_fredi_methane()). import_inputs() reads formats specified files data frames returns list data frames imported scenarios. CSV files contain estimates aligned requirements run_fredi() `` GDP Scenario. file specified inputsList$gdp must two columns -- \"year\" \"gdp_usd\" -- respectively containing years associated GDP estimates estimates U.S. GDP, 2015$. GDP values must greater equal zero. GDP scenario must least one non-missing value 2010 earlier least one non-missing value final analysis year (specified run_fredi() maxYear argument). Population Scenario. file specified inputsList$pop population must least two columns -- \"year\" \"pop\" -- respectively containing years associated population estimates population estimates. requires state-level population values. Whether third column required depends geographical scale data, specified popArea argument. popArea = \"state\", third column called \"state\" contain name state associated population estimate given year. popArea = \"regional\", third column called \"region\" contain NCA Region label associated population estimate given year (one \"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\" CONUS states, \"Alaska\" \"Hawaii\" Alaska Hawaii, respectively). popArea = \"national\", year pop columns required. popArea = \"state\", file must contain estimates CONUS states -- .e., states except Alaska Hawaii must present input file (estimates Alaska Hawaii optional). popArea = \"regional\", file must contain estimates seven NCA regions. population scenario must start 2010 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). Population values must greater equal zero. Population estimates must least one non-missing value 2010 earlier least one non-missing value final analysis year (specified run_fredi() maxYear argument). Temperature Scenario. file specified inputsList$temp must two columns -- \"year\" \"temp_C\" -- respectively containing years associated temperature estimates temperatures (.e., degrees warming) degrees Celsius relative baseline year 1995 (.e., central year 1986-2005 reference period). values \"temp_C\" global rather CONUS-specific temperatures, users specify temptype = \"global\" running import_inputs(), import_inputs() convert temperatures CONUS using convertTemps (argument = \"global\"). Temperature inputs run_fredi() must least one non-missing value 2000 earlier least one non-missing value final analysis year (specified run_fredi() maxYear argument). SLR Scenario. file specified inputsList$slr must two columns -- \"year\" \"slr_cm\" -- respectively containing years associated GMSL estimates GMSL estimates, centimeters, 2000 baseline year. GMSL heights must greater equal zero. SLR scenario must least one non-missing value 2000 earlier least one non-missing value final analysis year (specified run_fredi() maxYear argument). Ozone Scenario. input ozone scenario requires changes annual state-level ozone concentrations, GCM model, parts per trillion volume (pptv) relative 1986-2005 baseline era. words, input ozone scenario requires ozone concentrations specific state, GCM model, year analysis. o3 requires data frame object six columns names \"region\", \"state\", \"postal\", \"model\", \"year\", \"O3_pptv\"  containing region name (\"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\" CONUS states, \"Alaska\" \"Hawaii\" Alaska Hawaii, respectively), state name, two-character postal code abbreviation state, GCM model name (\"CanESM2\", \"GFDL-CM3\", \"GISS-E2-R\", \"HadGEM2-ES\", /\"MIROC5\"), year, change ozone concentration (pptv) relative 1986-2005 baseline era. Ozone inputs must least one non-missing value 2020 earlier least one non-missing value final analysis year (specified maxYear). inputs specified ozone methane NOx (.e., !.null(inputsList$o3) & (!.null(inputsList$ch4) | !.null(inputsList$nox))), run_fredi_methane() use ozone scenario preference methane NOx scenario. Methane Scenario. input methane scenario requires changes annual methane concentrations, national level, parts per billion volume (ppbv) relative 1986-2005 baseline era. ch4 requires data frame object two columns names \"year\" \"CH4_ppbv\"  containing year change methane concentration (ppbv) relative 1986-2005 baseline era. Methane inputs must least one non-missing value 2020 earlier least one non-missing value final analysis year (specified maxYear). run_fredi_methane() override user-supplied methane scenario user-supplied ozone scenario; words, run_fredi_methane() use ozone scenario preference methane NOx scenario. NOx Scenario. input NOx scenario requires annual NOx emissions US, national level, Megatons (MT) relative 1986-2005 baseline. nox requires data frame object two columns names \"year\" \"NOx_Mt\"  containing year change NOx concentration (Mt) relative 1986-2005 baseline era. NOx inputs must least one non-missing value 2020 earlier least one non-missing value final analysis year (specified maxYear). run_fredi_methane() override user-supplied methane scenario user-supplied ozone scenario; words, run_fredi_methane() use ozone scenario preference methane NOx scenario. run_fredi(), run_fredi_sv(), run_fredi_methane() require population scenario state level. population scenario supplied import_inputs() geographical scale state level (.e., popArea = \"national\", popArea = \"area\", popArea = \"regional\"), import_inputs() calculate state-level estimates provided data: popArea = \"national\", import_inputs() use historical U.S. Census data period 2010--2023 allocate total national population CONUS non-CONUS regions (.e., Alaska Hawaii); U.S. Census values 2023 applied allocations years 2023. import_inputs() uses ICLUS data projections period 2010--2100 allocate CONUS population specific NCA regions; ICLUS values 2100 applied allocations years 2100. popArea = \"national\" popArea = \"regional\", import_inputs() uses ICLUS data projections period 2010--2100 allocate population NCA region associated states; ICLUS values 2100 applied allocations years 2100. import_inputs() outputs list data frame objects can passed main FREDI function run_fredi() using inputList argument. example, specify run_fredi(inputsList = x) generate impacts custom scenario x (x list data frames output import_inputs()) (see run_fredi()). inputs import_inputs() optional. user specify particular named elements (errors reading inputs file path), import_inputs() outputs list NULL value associated list element. reading data specified CSV files, import_inputs() performs basic checks also return NULL value particular list element checks fail. using import_inputs() run_fredi(), run_fredi() defaults back default scenarios elements inputs list NULL missing. words, running run_fredi(inputsList = list()) returns outputs running run_fredi() (see run_fredi()).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/. United Nations. 2015. World population prospects: 2015 revision. New York: United Nations, Department Economic Social Affairs, Population Division. U.S. Census Bureau. 2021. State Population Totals Components Change: 2010--2019. Available https://www.census.gov/data/tables/time-series/demo/popest/2010s-state-total.html. U.S. Census Bureau. 2023. State Population Totals Components Change: 2020--2023. Available https://www.census.gov/data/tables/time-series/demo/popest/2020s-state-total.html. U.S. Census Bureau. 2023. 2023 National Population Projections Tables: Main Series. Available https://www.census.gov/data/tables/2023/demo/popproj/2023-summary-tables.html.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"","code":"### Path to example scenarios scenariosPath <- system.file(package=\"FrEDI\") |> file.path(\"extdata\",\"scenarios\")  ### View example scenario names scenariosPath |> list.files() #> [1] \"gcamDefault.csv\"   \"gcamScenarios.csv\" \"gdpDefault.csv\"    #> [4] \"popDefault.csv\"     ### SLR Scenario File Name slrInputFile  <- scenariosPath |> file.path(\"slr_from_gcam.csv\")  ### Population Scenario File Name popInputFile  <- scenariosPath |> file.path(\"State ICLUS Population.csv\")  ### Import inputs example_inputsList <- import_inputs(inputsList=list(slr=slrInputFile, pop=popInputFile), popArea=\"state\") #>  #> In import_inputs(): #> \tLoading data... #> \tUser specified slrfile... #> \t\tFile does not exist! Returning a null data frame for slr input. #> \tUser specified popfile... #> \t\tFile does not exist! Returning a null data frame for pop input. #>  #> \tChecking input values... #>  #> Finished.  ### Use imports with FREDI: df_x <- run_fredi(inputsList=example_inputsList) #> Checking scenarios... #> Calculating impacts... #> \t\tFormatting initial results... #> \t\tCalculating temperature-driven scaled impacts... #> \t\tCalculating SLR-driven scaled impacts... #> Formatting results... #> Aggregating impacts... #>  #> Finished."},{"path":"https://usepa.github.io/FrEDI/reference/popDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"U.S. state population scenario, which can be passed as an input to run_fredi(), run_fredi_sv(), and/or FrEDI:run_fredi_methane(). — popDefault","title":"U.S. state population scenario, which can be passed as an input to run_fredi(), run_fredi_sv(), and/or FrEDI:run_fredi_methane(). — popDefault","text":"popDefault data frame object contains population projections 50 U.S. states District Columbia period 2010 2100. Values 48 states District Columbia comprising contiguous U.S. (CONUS) Integrated Climate Land Use Scenarios Version 2 (ICLUSv2) model (Bierwagen et al, 2010; EPA 2017) Median variant projection United Nations (United Nations, 2015). Values Alaska Hawaii U.S. Census Bureau.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/popDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.S. state population scenario, which can be passed as an input to run_fredi(), run_fredi_sv(), and/or FrEDI:run_fredi_methane(). — popDefault","text":"","code":"popDefault"},{"path":"https://usepa.github.io/FrEDI/reference/popDefault.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.S. state population scenario, which can be passed as an input to run_fredi(), run_fredi_sv(), and/or FrEDI:run_fredi_methane(). — popDefault","text":"data frame 4,459 rows 5 columns: region Region U.S.: one \"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\" CONUS states, \"Alaska\" \"Hawaii\" Alaska Hawaii, respectively. state U.S. states District Columbia postal Two-letter postal code abbreviation associated state (e.g., \"AL\" Alabama) year Year pop State population associated region year","code":""},{"path":"https://usepa.github.io/FrEDI/reference/popDefault.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"U.S. state population scenario, which can be passed as an input to run_fredi(), run_fredi_sv(), and/or FrEDI:run_fredi_methane(). — popDefault","text":"https://epa.gov/cira/FrEDI/","code":""},{"path":"https://usepa.github.io/FrEDI/reference/popDefault.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"U.S. state population scenario, which can be passed as an input to run_fredi(), run_fredi_sv(), and/or FrEDI:run_fredi_methane(). — popDefault","text":"use popDefault input FrEDI, FrEDI SV module, /FrEDI Methane module, pass data frame via named element pop list passed inputsList argument function calls run_fredi(), run_fredi_sv(), /FrEDI:run_fredi_methane(), respectively, e.g.: run_fredi(inputsList=list(pop=popDefault)). popDefault can also combined provided scenarios (gcamScenarios, gdpDefault) function calls (e.g., run_fredi(inputsList=list(gdp=gdpDefault, pop=popDefault))) user-provided data frames. information, see documentation run_fredi(), FrEDI:run_fredi_sv(), FrEDI:run_fredi_methane(), import_inputs(). Bierwagen, B., D. M. Theobald, C. R. Pyke, . Choate, P. Groth, J. V. Thomas, P. Morefield. 2010. “National housing impervious surface scenarios integrated climate impact assessments.” Proc. Natl. Acad. Sci. 107 (49): 20887–20892. https://doi.org/10.1073/pnas.1002096107. EPA. 2017. Multi-Model Framework Quantitative Sectoral Impacts Analysis: technical report Fourth National Climate Assessment. U.S. Environmental Protection Agency, EPA 430-R-17-001. United Nations. 2015. World population prospects: 2015 revision. New York: United Nations, Department Economic Social Affairs, Population Division.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":null,"dir":"Reference","previous_headings":"","what":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"function allows users project annual average climate change impacts 2100 (2010-2100) available sectors, option extend results 2300 (2010-2300). Users may specify custom temperature, U.S. population, GDP scenarios. output R data frame object containing annual average impacts, year, sector, variant, impact type, region, state, model. FrEDI Version 4.1.0, run_fredi() calculates impacts state-level available sectors.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"","code":"run_fredi(   inputsList = list(temp = NULL, slr = NULL, gdp = NULL, pop = NULL),   sectorList = NULL,   aggLevels = c(\"national\", \"modelaverage\", \"impactyear\", \"impacttype\"),   elasticity = 1,   maxYear = 2100,   thru2300 = FALSE,   outputList = FALSE,   allCols = FALSE,   silent = TRUE )"},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"inputsList=list(gdp=NULL, pop=NULL, temp=NULL, slr=NULL) list named elements (gdp, pop, temp, /slr), containing data frames custom scenarios gross domestic product (GDP), state-level population, temperature, /global mean sea level rise (GMSL) trajectories, respectively, continuous period. Temperature sea level rise inputs start 2000 earlier. Values population GDP scenarios can start 2010 earlier. Values scenario type must within reasonable ranges. information, see import_inputs(). sectorList=NULL character vector indicating selection sectors calculate results (see get_sectorInfo()). NULL, sectors included (.e., sectorList = get_sectorInfo()). aggLevels=\"\" Levels aggregation summarize data: one c(\"national\", \"modelaverage\", \"impactyear\", \"impacttype\", \"\", \"none\"). Defaults levels (.e., aggLevels = \"\"). Uses aggregation levels aggregate_impacts(). Note , \"impacttype\" aggLevels (e.g., aggLevels = \"\"), columns \"physical_measure\" \"physical_impacts\" dropped results data frame. aggregating impact types sectors requires summing costs different types physical impacts, reporting physical impacts nonsensical. elasticity=1 numeric value indicating elasticity use adjusting VSL applicable sectors impacts (defaults elasticity = 1). Applicable sectors impacts : Climate-Driven Changes Air Quality (impact types), ATS Temperature-Related Mortality (impactType = \"N/\"; .e., impact types), CIL Temperature-Related Mortality, Extreme Temperature (impact types), Suicide (impactType = \"N/\"; .e., impact types), Southwest Dust (impactType = \"Mortality\"), Valley Fever (impactType = \"Mortality\"), Vibriosis (impactType = \"N/\"; .e., impact types), Wildfire (impactType = \"Mortality\"). maxYear=2100 numeric value indicating maximum year analysis. range maxYear [2011, 2300]. Defaults maxYear = 2100. thru2300=FALSE  TRUE/FALSE shortcut overrides maxYear argument run model 2300. Defaults thru2300 = FALSE. outputList=FALSE  TRUE/FALSE value indicating whether output results data frame object (outputList = FALSE, default) return list objects (outputList = TRUE) includes information model provenance (including input arguments input scenarios) along data frame results. allCols=FALSE TRUE/FALSE value indicating whether include intermediate column values results (e.g., physical economic multipliers). Used testing. Note aggregation levels must set aggLevels = \"none\" properly return intermediate columns. Defaults allCols = FALSE). silent=TRUE TRUE/FALSE value indicating level messaging desired user (default=TRUE).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"outputList=FALSE, output run_fredi() data frame object (described ) containing annual average impacts analysis period, sector, variant, impact type, impact year, region, state, model (GCM name temperature-driven sectors \"Interpolation\" SLR-driven sectors). outputList=TRUE, run_fredi() returns list object containing following: statusList. list values arguments passed run_fredi() (including defaults unspecified). argsList. list elements named run_fredi() arguments, containing values arguments passed run_fredi() (default values unspecified). scenarios. list named elements \"temp\", \"slr\", \"gdp\", \"pop\" -- containing scenarios temperature, SLR, GDP, population used model calculating impacts. results. Containing data frame annual impacts (.e., data frame returned outputList = FALSE).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"function allows users project annual average climate change impacts 2300 (2010-2300) available sectors. run_fredi() main function FrEDI R package, described elsewhere (See https://epa.gov/cira/FrEDI information). Users can specify optional list custom scenarios inputsList (information format inputs, see import_inputs()). function import_inputs() can used importing custom scenarios CSV files. import_inputs() returns list named elements gdp, pop, temp, slr, containing data frame custom scenario GDP, state-level population, temperature, /GMSL respectively. user imports scenarios using import_inputs(), can pass outputs import_inputs() directly run_fredi() argument inputsList. Note documentation import_inputs() can also provide additional guidance specification formats scenario type. Otherwise, run_fredi() looks list object passed argument inputsList. Within list, run_fredi() looks named list elements -- gdp, pop, temp, /slr -- containing data frame custom scenario GDP, state population, temperature, /GMSL, respectively. inputsList = NULL inputsList = list() (default), run_fredi() uses default trajectories GDP, population, temperature, SLR (see gdpDefault, popDefault, gcamScenarios information). run_fredi() default back default scenarios list elements empty NULL (words, running run_fredi(inputsList = list()) returns outputs running run_fredi()). GDP Inputs. input scenario gross domestic product (GDP) requires national GDP values 2015$. GDP values must greater equal zero. gdp requires data frame object two columns names \"year\", \"gdp_usd\" containing year national GDP, respectively. GDP values must greater equal zero. GDP inputs must least one non-missing value 2010 earlier least one non-missing value final analysis year (specified maxYear). user specify input scenario GDP (.e., inputsList = list(gdp = NULL), run_fredi() uses default GDP scenario. Population Inputs. input population scenario requires state-level population values. Population values must greater equal zero. pop requires data frame object five columns names \"region\", \"state\", \"postal\", \"year\", \"pop\" containing year, NCA region name (one \"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\"), state name, postal code abbreviation state, state population, respectively. Population inputs must least one non-missing value 2010 earlier least one non-missing value final analysis year (specified maxYear). user specify input scenario population (.e., inputsList = list(pop = NULL), run_fredi() uses default population scenario. Temperature Inputs. input temperature scenario requires CONUS temperatures degrees Celsius relative 1995 (degrees warming relative baseline year--.e., central year 1986-2005 baseline). CONUS temperature values must greater equal zero degrees Celsius. Users can convert global temperatures CONUS temperatures using convertTemps(= \"global\") (specifying import_inputs(temptype = \"global\") using import_inputs() import temperature scenario CSV file). temp requires data frame object two columns names \"year\", \"temp_C\" containing year CONUS temperatures degrees Celsius, respectively. Temperature inputs must least one non-missing value 2000 earlier least one non-missing value final analysis year (specified maxYear). user specify input scenario temperature (.e., inputsList = list(temp = NULL), run_fredi() uses default temperature scenario. SLR Inputs. input SLR scenario requires values changes global mean sea level rise (GMSL) heights centimeters (cm). GMSL heights must greater equal zero. slr requires data frame object two columns names \"year\", \"slr_cm\" containing year global mean sea level rise (GMSL) centimeters, respectively. SLR inputs must least one non-missing value 2000 earlier least one non-missing value final analysis year (specified maxYear). user specify input scenario SLR (.e., inputsList = list(slr = NULL), run_fredi() first converts input default CONUS temperature scenario global temperatures (using convertTemps()) converts global temperatures global mean sea level rise (GMSL) height centimeters (using temps2slr()). run_fredi() linearly interpolates missing annual values input scenarios using non-missing values (scenario requires least two non-missing values detailed scenario type). interpolation input scenarios, run_fredi() subsets input scenarios values within analysis period. Temperatures interpolated using 1995 baseline year (.e., central year 1986-2005 baseline) GMSL interpolated using 2000 baseline year. words, temperature (degrees Celsius) set zero year 1995, whereas GMSL set zero year 2000. interpolated temperature GMSL scenarios combined column called driverValue, along additional columns year, driver unit (column \"driverUnit\", driverUnit = \"degrees Celsius\" driverUnit = \"cm\" temperature- SLR-driven sectors, respectively), associated model type (column \"model_type\", model_type = \"GCM\" model_type = \"SLR\" temperature- SLR-driven sectors, respectively. run_fredi() calculates national population state-level values calculates GDP per capita values GDP national population. Values state population, national population, national GDP (2015$), national per capita GDP (2015$/capita) provided results data frame columns \"pop\", \"national_pop\", \"gdp_usd\", \"gdp_percap\", respectively. default, run_fredi() calculate impacts sectors included tool. Alternatively, users can pass character vector specifying single sector subset sectors using sectorList argument. see list sectors included within FrEDI, run get_sectorInfo(). sectorList = NULL (default), sectors included. default, run_fredi() calculates impacts starting year 2010 ending 2100. Specify alternative end year analysis using maxYear argument. maxYear default value 2100 minimum maximum values 2011 2300, respectively. Alternatively, users can set argument thru2300 = TRUE override maxYear argument set maxYear = 2300. Note default scenarios included within FrEDI stop year 2100; users must provide custom input scenarios desired end year specify maxYear >= 2100 (maxYear <= 2300) order return non-missing values years 2100. Annual impacts sector, variant, impact type, impact year combination included model calculated multiplying scaled climate impacts physical scalar economic scalars multipliers. sectors use Value Statistical Life (VSL) adjust value non-linearly time. run_fredi() uses default value elasticity = 1to adjust VSL applicable sectors impacts (default value elasticity = 1 keeps VSL constant time). custom elasticity can passed elasticity argument. Applicable sectors impacts *Climate-Driven Changes Air Quality (impact types), ATS Temperature-Related Mortality  (impactType = \"N/\"; .e., impact types), CIL Temperature-Related Mortality, Extreme Temperature (impact types), Suicide (impactType = \"N/\"; .e., impact types), Southwest Dust (impactType = \"Mortality\"), Valley Fever (impactType = \"Mortality\"), Vibriosis (impactType = \"N/\"; .e., impact types), Wildfire (impactType = \"Mortality\"). run_fredi() aggregates summarizes results level(s) aggregation specified user (passed aggLevels) using post-processing helper function aggregate_impacts(). Users can specify aggregation levels specifying aggLevels = \"\" (default) aggregation levels (aggLevels = \"none\"). Users can specify single aggregation level multiple aggregation levels passing single character string character vector aggLevels. Options aggregation include calculating national totals (aggLevels = \"national\"), averaging across model types models (aggLevels = \"modelaverage\"), summing impact types (aggLevels = \"impacttype\"), interpolating impact year estimates (aggLevels = \"impactYear\"). user specifies aggLevels = \"none\", run_fredi() returns data frame columns: \"sector\", \"variant\", \"impactType\", \"impactYear\", \"region\", \"state\", \"postal\", \"model_type\", \"model\", \"sectorprimary\", \"includeaggregate\", \"physicalmeasure\", \"driverType\", \"driverUnit\", \"driverValue\", \"gdp_usd\", \"national_pop\", \"gdp_percap\", \"pop\", \"year\", \"physical_impacts\", \"annual_impacts\". Columns \"sector\", \"variant\", \"impactType\", \"impactYear\", \"region\", \"state\", \"postal\", \"model_type\", \"model\" contain observation identifiers (sector name, variant, impact type, impact year, region, state, state postal code abbreviation, model type, model, respectively). Columns \"sectorprimary\" \"includeaggregate\" contain values provide information treat sectors aggregating sectors (e.g., summing impacts across sectors). Note FrEDI currently provide functionality aggregate sectors; information provided user convenience. Column \"sectorprimary\" contains values indicating variant use primary one sector: sectorprimary = 1for primary variants sectorprimary = 0 non-primary variants. aggregating impacts sectors, users filter outputs run_fredi() variants sectorprimary == 1. Column \"includeaggregate\" contains values provide information treat sectors aggregating sectors (e.g., summing impacts across sectors). Sectors value includeaggregate == 0 dropped aggregating results sectors, avoid potential double-counting impacts similar sectors. instance, sectors ATS Temperature-Related Mortality, CIL Temperature-Related Mortality, Extreme Temperature values temperature-related mortality. avoid double counting, outputs run_fredi() filtered values includeaggregate > 0. Sectors value includeaggregate > 0 can included aggregating sectors; sectors value includeaggregate > 0 value includeaggregate = 1. Values includeaggregate > 1 flag additional information sectors; currently, Suicide sector value includeaggregate > 1, value includeaggregate = 2. flag indicates impacts Suicide can included summing values across sectors, may overlap impacts ATS Temperature-Related Mortality. information potential overlap impacts ATS Temperature-Related Mortality Suicide, visit technical documentation https://epa.gov/cira/FrEDI/, Columns \"driverType\", \"driverUnit\", \"driverValue\" contain information temperature SLR scenarios. Columns \"gdp_usd\", \"national_pop\", \"gdp_percap\", \"pop\" contain information GDP population scenarios. Columns \"physicalmeasure\" \"physical_impacts\" contain information physical impacts. Column \"annual_impacts\" contains information economic value associated annual impacts. user specifies aggLevels = \"\" combinations aggregation levels, run_fredi() passes results data frame aggLevels argument aggregate_impacts() function. aggregate_impacts() performs following calculations, using default grouping columns aggregate_impacts(): \"sector\", \"variant\", \"impactType\", \"impactYear\", \"region\", \"state\", \"postal\", \"model_type\", \"model\", \"sectorprimary\", \"includeaggregate\", \"physicalmeasure\", \"year\" (note \"variant\" column referred contains information variant name (“N/”), applicable). aggregating values, aggregate_impacts() joins data frame impacts information \"driverType\", \"driverUnit\", \"driverValue\", \"gdp_usd\", \"national_pop\", \"gdp_percap\", \"pop\". outputList = FALSE (default), run_fredi() returns data frame annual average impacts analysis period, sector, variant, impact type, impact year, region, state, model type (\"GCM\" \"SLR\"), model. outputList = TRUE, addition data frame impacts, run_fredi() returns list object containing information values function arguments, driver scenarios, population GDP scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"","code":"### Load FrEDI require(FrEDI)  ### Run function with defaults run1 <- run_fredi() #> Checking scenarios... #> Calculating impacts... #> \t\tFormatting initial results... #> \t\tCalculating temperature-driven scaled impacts... #> \t\tCalculating SLR-driven scaled impacts... #> Formatting results... #> Aggregating impacts... #>  #> Finished.  ### Load climate scenarios and glimpse data data(\"gcamScenarios\") gcamScenarios |> glimpse() #> Rows: 606 #> Columns: 6 #> $ year          <int> 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 20… #> $ temp_C_conus  <dbl> 0.1804171, 0.2238804, 0.2640659, 0.2986389, 0.3277609, 0… #> $ temp_C_global <dbl> 0.1269649, 0.1575513, 0.1858310, 0.2101611, 0.2306551, 0… #> $ slr_cm        <dbl> 0.0000000, 0.2727356, 0.5552278, 0.8458496, 1.1430287, 1… #> $ scenario      <chr> \"ECS_3.0_REF\", \"ECS_3.0_REF\", \"ECS_3.0_REF\", \"ECS_3.0_RE… #> $ model         <chr> \"Hector_GCAM_v5.3\", \"Hector_GCAM_v5.3\", \"Hector_GCAM_v5.…  ### Load population scenario and glimpse data data(\"popDefault\") popDefault |> glimpse() #> Rows: 14,259 #> Columns: 5 #> $ region    <chr> \"Southeast\", \"Southeast\", \"Southeast\", \"Southeast\", \"Southea… #> $ state     <chr> \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alab… #> $ postal    <chr> \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", … #> $ year      <int> 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, … #> $ state_pop <dbl> 4779736, 4823623, 4867509, 4911396, 4955282, 4999169, 503604…  ### Subset climate scenario temps1 <- gcamScenarios |> filter(scenario==\"ECS_3.0_ref\") temps1 <- temps1 |> select(year, temp_C_conus)  ### Run custom scenario run2 <- run_fredi(inputsList=list(temp=temps1, pop=popDefault)) #> Checking scenarios... #>  #> \t\tChecking input values for pop inputs... #> \t\t\tColumn \"pop\" not found in popfile data! #> \t\t\tLooking for columns with matches to the string \"pop\"...1 match found! #> \t\t\tUsing column \"\", and renaming to \"pop\"... #> \t\t\t\tData is missing the following required columns: state_pop! #> \t\t\t\tDropping pop inputs from outputs. #> Calculating impacts... #> \t\tFormatting initial results... #> \t\tCalculating temperature-driven scaled impacts... #> \t\tCalculating SLR-driven scaled impacts... #> Formatting results... #> Aggregating impacts... #>  #> Finished.  ### Load scenarios from file: scenariosPath <- system.file(package=\"FrEDI\") |> file.path(\"extdata\",\"scenarios\") scenariosPath |> list.files() #> [1] \"gcamDefault.csv\"   \"gcamScenarios.csv\" \"gdpDefault.csv\"    #> [4] \"popDefault.csv\"      ### SLR Scenario File Name slrInputFile  <- scenariosPath |> file.path(\"gcamDefault.csv\")  ### Population Scenario File Name popInputFile  <- scenariosPath |> file.path(\"popDefault.csv\")  ### Import inputs x_inputs <- import_inputs(inputsList=list(slr=slrInputFile, pop=popInputFile), popArea=\"state\") #>  #> In import_inputs(): #> \tLoading data... #> \tUser specified slrfile... #> \t\tImporting data from C:/Users/knoiva/AppData/Local/R/win-library/4.4/FrEDI/extdata/scenarios/gcamDefault.csv... #> \t\tData loaded. #> \tUser specified popfile... #> \t\tImporting data from C:/Users/knoiva/AppData/Local/R/win-library/4.4/FrEDI/extdata/scenarios/popDefault.csv... #> \t\tData loaded. #>  #> \tChecking input values... #>  #> \t\tChecking input values for slr inputs... #> \t\tValues passed. #>  #> \t\tChecking input values for pop inputs... #> \t\t\tChecking that all states, etc. are present... #>  #> \t\t\tChecking inputs for unique regions, states... #> \t\t\t\tAll regions present... #> \t\t\t\tAll states present... #> \t\tValues passed. #>  #> Finished.  ### Run custom scenarios run3 <- run_fredi(inputsList=x_inputs) #> Checking scenarios... #>  #> \t\tChecking input values for slr inputs... #> \t\tValues passed. #>  #> \t\tChecking input values for pop inputs... #> \t\t\tChecking that all states, etc. are present... #>  #> \t\t\tChecking inputs for unique regions, states... #> \t\t\t\tAll regions present... #> \t\t\t\tAll states present... #> \t\tValues passed. #> \tCreating SLR scenario from user inputs... #> \tCreating population scenario from user inputs... #> Calculating impacts... #> \t\tFormatting initial results... #> \t\tCalculating temperature-driven scaled impacts... #> \t\tCalculating SLR-driven scaled impacts... #> Formatting results... #> Aggregating impacts... #>  #> Finished.  ### Get information on sectors: get_sectorInfo() #>  [1] \"ATS Temperature-Related Mortality\"              #>  [2] \"Asphalt Roads\"                                  #>  [3] \"CIL Agriculture\"                                #>  [4] \"CIL Crime\"                                      #>  [5] \"CIL Temperature-Related Mortality\"              #>  [6] \"Climate-Driven Changes in Air Quality\"          #>  [7] \"Coastal Properties\"                             #>  [8] \"Electricity Demand and Supply\"                  #>  [9] \"Electricity Transmission and Distribution\"      #> [10] \"Extreme Temperature\"                            #> [11] \"Inland Flooding\"                                #> [12] \"Labor\"                                          #> [13] \"Marine Fisheries\"                               #> [14] \"Rail\"                                           #> [15] \"Roads\"                                          #> [16] \"Southwest Dust\"                                 #> [17] \"Suicide\"                                        #> [18] \"Transportation Impacts from High Tide Flooding\" #> [19] \"Urban Drainage\"                                 #> [20] \"Valley Fever\"                                   #> [21] \"Vibriosis\"                                      #> [22] \"Water Quality\"                                  #> [23] \"Wildfire\"                                       #> [24] \"Wind Damage\"                                    #> [25] \"Winter Recreation\"                               ### Run for a single sector, with default inputs, no aggregation, and elasticity=1: run4 <- run_fredi(sectorList=\"ATS Temperature-Related Mortality\", aggLevels=\"none\", elasticity=1) #> Checking scenarios... #> Calculating impacts... #> \t\tFormatting initial results... #> \t\tCalculating temperature-driven scaled impacts... #> Formatting results... #>  #> Finished.  ### Set end year for analysis to 2110 -- messages user and returns a null value since default scenarios only have values out to 2100 run5 <- run_fredi(maxYear=2110) #> Checking scenarios... #> Calculating impacts... #> \t\tFormatting initial results... #> \t\tCalculating temperature-driven scaled impacts... #> \t\tCalculating SLR-driven scaled impacts... #> Formatting results... #> Aggregating impacts... #>  #> Finished.  ### Set end year for analysis to 2300 -- messages user and returns a null value since default scenarios only have values out to 2100) run6 <- run_fredi(thru2300=TRUE) #> Checking scenarios... #> Calculating impacts... #> \t\tFormatting initial results... #> \t\tCalculating temperature-driven scaled impacts... #> \t\tCalculating SLR-driven scaled impacts... #> Formatting results... #> Aggregating impacts... #>  #> Finished."},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_methane.html","id":null,"dir":"Reference","previous_headings":"","what":"Project annual average impacts from methane, NOx, and ozone. — run_fredi_methane","title":"Project annual average impacts from methane, NOx, and ozone. — run_fredi_methane","text":"function allows users estimate mortality impacts changes ozone concentrations driven changes methane concentrations (optionally) NOx emissions atmosphere.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_methane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project annual average impacts from methane, NOx, and ozone. — run_fredi_methane","text":"","code":"run_fredi_methane(   inputsList = list(gdp = NULL, pop = NULL, ch4 = NULL, nox = NULL, o3 = NULL),   elasticity = 1,   maxYear = 2100,   thru2300 = FALSE,   outputList = FALSE,   allCols = FALSE )"},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_methane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project annual average impacts from methane, NOx, and ozone. — run_fredi_methane","text":"inputsList=list(gdp=NULL, pop=NULL, ch4=NULL, nox=NULL, o3=NULL) list named elements (gdp, pop, ch4, nox, /o3), containing data frames custom scenarios gross domestic product (GDP), state-level population, ozone concentration, methane concentration, NOx emissions, respectively, continuous period. Values start 2020 earlier. Values scenario type must within reasonable ranges. information, see import_inputs(). elasticity=1 numeric value indicating elasticity use adjusting VSL (defaults elasticity = 1). maxYear=2100 numeric value indicating maximum year analysis. range maxYear [2011, 2300]. Defaults maxYear = 2100. thru2300=FALSE  TRUE/FALSE shortcut overrides maxYear argument run model 2300. Defaults thru2300 = FALSE. outputList=FALSE  TRUE/FALSE value indicating whether output results data frame object (outputList = FALSE, default) return list objects (outputList = TRUE) includes information model provenance (including input arguments input scenarios) along data frame results. allCols=FALSE TRUE/FALSE value indicating whether include intermediate column values results (e.g., physical economic multipliers). Used testing. Defaults allCols = FALSE).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_methane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project annual average impacts from methane, NOx, and ozone. — run_fredi_methane","text":"outputList=FALSE, output run_fredi_methane() data frame object (described ) containing annual physical economic impacts analysis period, region, state, model. outputList=TRUE, run_fredi_methane() returns list object containing following: statusList. list values arguments passed run_fredi_methane() (including defaults unspecified). argsList. list elements named run_fredi_methane() arguments, containing values arguments passed run_fred_methane() (default values unspecified). scenarios. list named elements gdp pop o3 ch4 nox -- containing scenarios GDP, population, ozone methane NOx used model calculating impacts. results. Containing data frame annual physical economic impacts (.e., data frame returned outputList = FALSE).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_methane.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project annual average impacts from methane, NOx, and ozone. — run_fredi_methane","text":"function allows users estimate mortality impacts changes ozone concentrations driven changes methane concentrations, (optionally) NOx emissions. Users can specify optional list custom scenarios inputsList (information format inputs, see import_inputs()). function import_inputs() can used importing custom scenarios CSV files. import_inputs() returns list named elements gdp, pop, o3, ch4, /nox, respectively containing data frame custom scenario GDP, state-level population, change ozone concentration, change methane concentration, NOx emissions. user imports scenarios using import_inputs(), can pass outputs import_inputs() directly run_fred_methane() argument inputsList. Note documentation import_inputs() can also provide additional guidance specification formats scenario type. Otherwise, run_fred_methane() looks list object passed argument inputsList. Within list, run_fred_methane() looks named list elements -- gdp, pop, o3, ch4, /nox -- respectively containing data frame custom scenario GDP, state-level population, ozone concentration, methane concentration, /NOx concentration. inputsList = NULL inputsList = list() (default), run_fred_methane() uses default trajectories GDP, population, ozone concentration, methane concentration, /NOx concentration. run_fred_methane() default back default scenarios list elements empty NULL (words, running run_fredi(inputsList = list()) returns outputs running run_fred_methane()). See gdpDefault, popDefault information default GDP population scenarios. Default scenarios ozone, methane, NOx described detail . GDP Inputs. input scenario gross domestic product (GDP) requires national GDP values 2015$. GDP values must greater equal zero. gdp requires data frame object two columns names \"year\", \"gdp_usd\" containing year national GDP, respectively. GDP values must greater equal zero. GDP inputs must least one non-missing value 2020 earlier least one non-missing value final analysis year (specified maxYear). Note minimum year GDP scenario different run_fredi(), run_fredi_methane() available starting 2020. user specify input scenario GDP (.e., inputsList = list(gdp = NULL), run_fred_methane() uses default GDP scenario. Population Inputs. input population scenario requires state-level population values(national-, CONUS-, region-level population values can converted state-level population immporting inputs using import_inputs() function). Population values must greater equal zero. pop requires data frame object five columns names \"region\", \"state\", \"postal\", \"year\", \"pop\" containing region name (one \"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\" CONUS states, \"Alaska\" \"Hawaii\" Alaska Hawaii, respectively), state name, two-character postal code abbreviation state, year, state population, respectively. Population inputs must least one non-missing value 2020 earlier least one non-missing value final analysis year (specified maxYear). Note minimum year GDP scenario different run_fredi(), run_fredi_methane() available starting 2020. user specify input scenario population (.e., inputsList = list(pop = NULL), run_fred_methane() uses default population scenario. Ozone Inputs. input ozone scenario requires changes annual state-level ozone concentrations, GCM model, parts per trillion volume (pptv) relative 1986-2005 baseline era. words, input ozone scenario requires ozone concentrations specific state, GCM model, year analysis. o3 requires data frame object six columns names \"region\", \"state\", \"postal\", \"model\", \"year\", \"O3_pptv\"  containing region name (\"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\" CONUS states, \"Alaska\" \"Hawaii\" Alaska Hawaii, respectively), state name, two-character postal code abbreviation state, GCM model name (\"CanESM2\", \"GFDL-CM3\", \"GISS-E2-R\", \"HadGEM2-ES\", /\"MIROC5\"), year, change ozone concentration (pptv) relative 1986-2005 baseline era. Ozone inputs must least one non-missing value 2020 earlier least one non-missing value final analysis year (specified maxYear). inputs specified ozone methane NOx (.e., !.null(inputsList$o3) & (!.null(inputsList$ch4) | !.null(inputsList$nox))), run_fredi_methane() use ozone scenario preference methane NOx scenario. Methane Inputs. input methane scenario requires changes annual methane concentrations, national level, parts per billion volume (ppbv) relative 1986-2005 baseline era. ch4 requires data frame object two columns names \"year\" \"CH4_ppbv\"  containing year change methane concentration (ppbv) relative 1986-2005 baseline era. Methane inputs must least one non-missing value 2020 earlier least one non-missing value final analysis year (specified maxYear). run_fredi_methane() override user-supplied methane scenario user-supplied ozone scenario; words, run_fredi_methane() use ozone scenario preference methane NOx scenario. NOx Inputs. input NOx scenario requires annual NOx emissions US, national level, Megatons (MT) relative 1986-2005 baseline. nox requires data frame object two columns names \"year\" \"NOx_Mt\"  containing year change NOx concentration (Mt) relative 1986-2005 baseline era. NOx inputs must least one non-missing value 2020 earlier least one non-missing value final analysis year (specified maxYear). run_fredi_methane() override user-supplied methane scenario user-supplied ozone scenario; words, run_fredi_methane() use ozone scenario preference methane NOx scenario. inputs specified ozone methane NOx (.e., !.null(inputsList$o3) & (!.null(inputsList$ch4) | !.null(inputsList$nox))), run_fredi_methane() use ozone scenario preference methane NOx scenario. ozone, methane, NOx scenario provided (.e., inputsList$o3, inputsList$ch4, inputsList$nox NULL), run_fredi_methane() use default ozone scenario calculate impacts. However, user provides input scenario methane NOx (.e., either inputsList$ch4 inputsList$nox NULL) ozone scenario provided (.e., inputsList$o3 NULL), run_fredi_methane() use methane NOx scenarios (either inputs missing, run_fredi_methane() use corresponding default scenario). calculate change ozone concentrations using methane NOx scenarios, run_fredi_methane() follows approach described EPA (Forthcoming): First, run_fredi_methane calculates values change ozone concentration (pptv) multiplying values given change methane concentrations (ppbv) state- model-specific ozone response matrix (values units concentrations ozone pptv relative concentrations methane ppbv). Second, run_fredi_methane calculates values NOx factor (NOxFactor) NOx concentrations Mt (NOX_Mt), using equation NOxFactor = (log(NOX_Mt) \\* k1 + k0) \\* 1e3/556 (k0 k1 coefficients values -1.12 -0.49, respectively). Note methane module currently uses GCM average values US, though GCM-specific values available added future revisions. Third, run_fredi_methane calculates NOx ratio (NOxRatio = NOxFactor / NOxFactor0) dividing NOx factor values (NOxFactor) Step 2 reference NOx factor (NOxFactor0=-4.088991), value NOxFactor0 calculated reference NOx concentration (NOX_Mt0=10.528) using equation Step 2. Fourth, run_fredi_methane adjusts values change ozone concentration Step 1 NOx ratio Step 3. run_fredi_methane uses following default scenarios: Methane. methane default scenario, ch4Default, uses constant value CH4_ppbv=100 change methane concentration (ppbv) years 2020 2100. See ch4Default information default scenario. Note temperature scenario used produce default methane scenario differs default temperature scenario used main FrEDI (run_fredi()) FrEDI SV module (run_fredi_sv()). NOx. NOx default scenario, noxDefault, uses constant value NOx_Mt=10.528 change NOx concentration (Mt) years 2020 2100. Ozone. ozone default scenario, o3Default, uses state- GCM-specific constant values change ozone concentration (O3_pptv pptv) years 2020 2100, calculated default methane NOx scenarios using approach described . run_fredi_methane() linearly interpolates missing annual values input scenarios using non-missing values (scenario requires least two non-missing values detailed scenario type). interpolation input scenarios, run_fredi_methane() subsets input scenarios values within analysis period (years 2020 ending year specified maxYear). default, run_fredi_methane() calculates impacts starting year 2020 ending 2100. Specify alternative end year analysis using maxYear argument. maxYear default value 2100 minimum maximum values 2020 2300, respectively. Alternatively, users can set argument thru2300 = TRUE override maxYear argument set maxYear = 2300. Note default scenarios included within FrEDI stop year 2100; users must provide custom input scenarios desired end year specify maxYear >= 2100 (maxYear <= 2300) order return non-missing values years 2100. run_fredi_methane() calculates national population state population values calculates GDP per capita values GDP national population. Values state population, national population, national GDP (2015$), national per capita GDP (2015$/capita) provided results data frame columns \"pop\", \"national_pop\", \"gdp_usd\", \"gdp_percap\", respectively. run_fredi_methane() converts physical impacts (excess deaths) economic impact using Value Statistical Life (VSL) approach. VSL values adjusted time scaling GDP per capita (relative CONUS population) relative reference GDP per capita. information, refer EPA (2021). process used methane module calculate physical impacts (excess respiratory deaths) ozone follows: run_fredi_methane() estimates time-dependent national respiratory mortality rate (deaths per capita) national population values relative reference population. State-level respiratory mortality (deaths) calculated national respiratory mortality rate state population. run_fredi_methane() calculates state-level respiratory mortality ratio dividing state-level respiratory mortality reference respiratory mortality. run_fredi_methane() also calculates state- model-specific ozone ratio dividing change ozone concentration values pptv reference values. calculate number excess respiratory mortality due ozone, run_fredi_methane() multiplies state- model-specific baseline values excess respiratory mortality state-level respiratory mortality ratio state- model-specific ozone ratio. calculate economic impacts excess respiratory deaths ozone, run_fredi_methane() multiplies physical impacts VSL adjusted GDP population, described . outputList = FALSE (default), run_fredi_methane() returns data frame annual physical economic impacts analysis period, region, state, model. outputList = TRUE, addition data frame impacts, run_fred_methane() returns list object containing information values function arguments scenarios GDP, population, ozone methane NOx.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_methane.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Project annual average impacts from methane, NOx, and ozone. — run_fredi_methane","text":"Environmental Protection Agency (EPA). (Forthcoming). Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_methane.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project annual average impacts from methane, NOx, and ozone. — run_fredi_methane","text":"","code":"### Load FrEDI require(FrEDI)  ### Load population and GDP scenarios and glimpse data data(\"popDefault\"); popDefault |> glimpse() #> Rows: 14,259 #> Columns: 5 #> $ region    <chr> \"Southeast\", \"Southeast\", \"Southeast\", \"Southeast\", \"Southea… #> $ state     <chr> \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alab… #> $ postal    <chr> \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", … #> $ year      <int> 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, … #> $ state_pop <dbl> 4779736, 4823623, 4867509, 4911396, 4955282, 4999169, 503604… data(\"gdpDefault\"); gdpDefault |> glimpse() #> Rows: 291 #> Columns: 2 #> $ year    <dbl> 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 20… #> $ gdp_usd <dbl> 1.669367e+13, 1.704679e+13, 1.739992e+13, 1.775304e+13, 1.8106…   ### Run FrEDI methane with O3 inputs example1 <- run_fredi_methane(inputsList=list(gdp=gdpDefault, pop=popDefault, o3=o3Default)) #> Checking scenarios... #> Error in eval(expr, envir, enclos): object 'o3Default' not found  ### Run FrEDI methane with methane inputs example1 <- run_fredi_methane(inputsList=list(gdp=gdpDefault, pop=popDefault, ch4=ch4Default)) #> Checking scenarios... #> Error in eval(expr, envir, enclos): object 'ch4Default' not found  ### Run FrEDI methane with methane and NOx inputs example1 <- run_fredi_methane(inputsList=list(gdp=gdpDefault, pop=popDefault, ch4=ch4Default, nox=noxDefault)) #> Checking scenarios... #> Error in eval(expr, envir, enclos): object 'ch4Default' not found"},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"run_fredi_sv allows users project annual average climate change impacts throughout 21st century (2010-2100) socially vulnerable (SV) populations available sectors. Users can run run_fredi_sv() individual sectors generate annual physical impacts SV populations. run_fredi_sv() can run default population climate (temperature sea level rise trajectories) using custom trajectories. output run_fredi_sv() R data frame object containing annual average physical impacts five-year increments period 2010 2100. basic structure, specific methodology, underlying data supporting FrEDI-SV derived EPA’s independently peer-reviewed September 2021 report, Climate Change Social Vulnerability United States: Focus Six Impacts","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"","code":"run_fredi_sv(   sector = NULL,   inputsList = list(pop = NULL, temp = NULL, slr = NULL),   silent = TRUE,   .testing = FALSE )"},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"sector character string indicating sector FrEDI SV module calculate impacts (see get_sv_sectorInfo() list available sectors). silent logical (TRUE/FALSE) value indicating level messaging desired user (defaults silent=TRUE) inputsList=list(pop=NULL, temp=NULL, slr=NULL) list named elements (pop, temp, /slr), containing data frames custom scenarios state-level population, temperature, /global mean sea level rise (GMSL) trajectories, respectively, continuous period. Temperature sea level rise inputs start 2000 earlier. Values population scenarios can start 2010 earlier. Values scenario type must within reasonable ranges. information, see import_inputs(). pop. input population scenario requires data frame object single scenario population values 48 U.S. states District Columbia comprising contiguous U.S. (CONUS). population scenario must five columns names \"region\", \"state\", \"postal\", \"year\", \"_pop\" containing NCA region name (\"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\"), state name, two-letter postal code abbreviation state (e.g., \"\" Maine), year, state population, respectively. input population scenario can contain single scenario, contrast values temperature SLR inputs. words, run_fredi_sv() uses population scenario running temperature SLR scenarios passed run_fredi_sv(). user specify input scenario population (.e., popInput = NULL, run_fredi_sv() uses default population scenario (see documentation popScenario). Population inputs must least one non-missing value 2010 earlier least one non-missing value final analysis year (2100). Population values must greater equal zero. temp slr. input temperature SLR scenario data frame containing one custom scenarios. inputs formulated similarly run_fredi() import_inputs(), additional column (scenario) indicating unique scenario identifier. Temperature /SLR input scenarios must least one non-missing value year 2000 earlier least one non-missing value final analysis year (2100). temp. Temperature inputs used run_fredi_sv() temperature-driven sectors; run get_sv_sectorInfo(gcmOnly=TRUE) get list temperature-driven sectors available SV module. Temperature inputs require data frame columns year, temp_C, scenario, respectively containing year associated observation, temperature values CONUS degrees Celsius warming relative 1995 baseline (1995 central year 1986-2005 baseline period -- .e., values start zero year 1995), unique scenario identifier. temperature scenario specified (.e., inputsList$temp NULL) running temperature-driven sector, run_fredi_sv() use default temperature scenario (see FrEDI:gcamScenarios). slr. SLR inputs used run_fredi_sv() sea level rise-driven sectors; run get_sv_sectorInfo(slrOnly=TRUE) get list SLR-driven sectors available SV module. SLR inputs require data frame columns year, slr_cm, scenario, respectively containing global mean sea level rise centimeters relative 2000 baseline (.e., values start zero year 2000), unique scenario identifier. SLR scenario specified (.e., inputsList$slr NULL) running temperature-driven sector: user supplied temperature scenario (.e., inputsList$temp NULL), run_fredi_sv() calculate sea level rise values temperature inputs using temps2slr() function; temperature scenario provided, run_fredi_sv use default SLR scenario (see FrEDI:gcamScenarios).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"output run_fredi_sv() R data frame object containing average annual physical impacts socially vulnerable groups, NCA region level five-year increments.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"run_fredi_sv() projects annual climate change impacts socially vulnerable (SV) populations throughout 21st century (2010-2100) available sectors, using default user-specified population, temperature, sea level rise (SLR) trajectories. run_fredi_sv() main function FrEDI Social Vulnerability (SV) module FrEDI R package, described elsewhere (See https://epa.gov/cira/FrEDI information). SV module extends FrEDI framework socially vulnerable populations using data underlying 2021 U.S. Environmental Protection Agency (EPA) report Climate Change Social Vulnerability United States. Users can run run_fredi_sv() generate annual physical impacts SV groups individual sectors. running run_fredi_sv(), users must specify one sectors SV module; use get_sv_sectorInfo() list available sectors. run_fredi_sv() can run default population climate (temperature SLR) trajectories use run_fredi_sv() run custom scenarios. Running run_fredi_sv() custom climate scenarios requires passing data frame scenarios driverInput argument. run_fredi_sv() can also run custom population scenario passing data frame regional population trajectories popInput argument; unlike climate scenarios, run_fredi_sv() run single scenario time. output run_fredi_sv() R data frame object containing average annual physical impacts socially vulnerable groups, NCA region level five-year increments.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"Bierwagen, B., D. M. Theobald, C. R. Pyke, . Choate, P. Groth, J. V. Thomas, P. Morefield. 2010. “National housing impervious surface scenarios integrated climate impact assessments.” Proc. Natl. Acad. Sci. 107 (49): 20887–20892. https://doi.org/10.1073/pnas.1002096107. EPA. 2017. Multi-Model Framework Quantitative Sectoral Impacts Analysis: technical report Fourth National Climate Assessment. U.S. Environmental Protection Agency, EPA 430-R-17-001. EPA. 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). U.S. Environmental Protection Agency, EPA 430-R-21-004. Available https://epa.gov/cira/FrEDI/. EPA. 2021. Climate Change Social Vulnerability United States: Focus Six Impacts. U.S. Environmental Protection Agency, EPA 430-R-21-003. Available https://www.epa.gov/cira/social-vulnerability-report/. United Nations. 2015. World population prospects: 2015 revision. New York: United Nations, Department Economic Social Affairs, Population Division. U.S. Global Change Research Program. 2015. Scenarios National Climate Assessment. Available https://scenarios.globalchange.gov/regions_nca4.","code":""},{"path":[]},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"pre-processing helper function converts vector global temperatures global mean sea level rise (GMSL). function adapts method described Kopp et al. (2016) (see references, ).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"","code":"temps2slr(temps, years)"},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"temps numeric vector global temperatures degrees Celsius. temperature series corresponding years must begin 2000 earlier. years numeric vector years (common era) corresponding temperatures provided temps. temperature series corresponding years must begin 2000 earlier.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"Outputs data frame two columns: year, years years input fall within range 2000 2090 slr_cm GMSL centimeters.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"function converts temperature scenario (global temperatures degrees Celsius) SLR scenario use estimate impacts global mean sea level rise (GMSL) affected sectors. temps2slr() implements method described Kopp et al., 2016, \"Temperature-driven global sea-level variability Common Era\" (see references, ). Kopp et al.'s \"semiempirical\" sea-level model relates rate global sea level (GSL) rise \\(\\frac{dh}{dt}\\) global mean temperature \\(T(t)\\), equilibrium temperature \\(T_0(t)\\), small residual trend arising long-term response earlier climate change \\(\\phi(t)\\): $$dh/dt = \\alpha \\cdot (T(t) - T_0(t)) + \\phi(t)$$ explained Kopp et al. (2016): \"first term describes GSL response climate change study period. second term covers small residual trend arising long-term response earlier climate change (.e., deglaciation), slowly decaying millennia order 0.1 mm/year 2000 CE. thus negligible effect modeled GSL rise 20th 21st centuries\" (Kopp et al., 2016, p. E1439). equation , \\(T_0(t)\\) \\(\\phi(t)\\) functions time, : $$\\frac{dT_0(t)}{dt} = \\frac{T(t) - Te(t)}{\\tau_1}$$ : $$\\frac{d\\phi(t)}{dt} = \\frac{\\phi}{\\tau_2}$$ \\(\\tau_1\\) \\(\\tau_2\\) constants.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/. Kopp, Robert E., et al. (2016). Temperature-driven global sea-level variability Common Era. PNAS: E1434-E1441. Available https://www.pnas.org/content/113/11/E1434","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"","code":"### Path to example scenarios scenariosPath <- system.file(package=\"FrEDI\") |> file.path(\"extdata\",\"scenarios\") ### View example scenario names  scenariosPath |> list.files() #> [1] \"gcamDefault.csv\"   \"gcamScenarios.csv\" \"gdpDefault.csv\"    #> [4] \"popDefault.csv\"     ### Temperature Scenario File Name tempInputFile <- scenariosPath |> file.path(\"GCAM_scenario.csv\")  ### Import example temperature scenario example_inputsList <- import_inputs(tempfile = tempInputFile) #> Error in import_inputs(tempfile = tempInputFile): unused argument (tempfile = tempInputFile)  ### Extract the example temperature scenario data frame from the list ### Example has global temperatures in degrees Celsius x_tempInput <- example_inputsList$tempInput #> Error in eval(expr, envir, enclos): object 'example_inputsList' not found  ### Calculate global mean sea level rise in cm from global temperatures x_slr <- temps2slr(temps=x_tempInput$temp_C, years=x_tempInput$year) #> Error in eval(expr, envir, enclos): object 'x_tempInput' not found"},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v411","dir":"Changelog","previous_headings":"","what":"FrEDI v4.1.1","title":"FrEDI v4.1.1","text":"See FrEDI v4.1 full release notes Bug fixes - n/Updates - ** Major updates: n/** Minor updates include: updated includeaggregate flag suicide sector run_fredi() run_fredi_sv(), alert users alternative sector aggregation approach avoid possible double counting impacts default temperature-related mortality sector; updated R package documentation reflect updates; updated github page Additional sectors added - n/Documentation fixes - n/New features - n/","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v41","dir":"Changelog","previous_headings":"","what":"FrEDI v4.1","title":"FrEDI v4.1","text":"release corresponds FrEDI v4.1, accompanies publication 2024 FrEDI Technical Documentation. Bug fixes - n/Updates - ** Major updates: impacts damages now calculated state-level (previously region-level) 25 impact-category sectors; FrEDI default max year changed 2090 2100 ** Minor updates include: updated import_inputs() accept population datafiles containing U.S. national, contiguous U.S., U.S. state populations set temperature values outside allowed range (<=0C >= 30C) zero; updated run_fredi_sv() accept state-level population inputs; updated R package documentation reflect new features Additional sectors added - n/Documentation fixes - minor updates account new default max year state-level population input formatting features New features - FrEDI outputs include damages impacts state-level (48 contiguous states District Columbia) 25 impact category sectors; FrEDI default max year changed 2090 2100","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v402-peer-review","dir":"Changelog","previous_headings":"","what":"FrEDI v4.0.2 (peer-review)","title":"FrEDI v4.0.2 (peer-review)","text":"Starting February 2024, FrEDI Technical Documentation v4.0 FrEDI R package subject public review comment period independent, external peer-review. release corresponds FrEDI v4.0.2, peer-review release version. Bug fixes - fixes GDP input reference meta data documentation run_fredi() Updates - ** Major updates include: impacts damages now calculated state-level (previously region-level) 17 impact-category sectors ** Minor updates include: n/Additional sectors added - n/Documentation fixes - n/New features - FrEDI outputs include damages impacts state-level (48 contiguous states District Columbia) 17 impact category sectors.","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v401-public-review","dir":"Changelog","previous_headings":"","what":"FrEDI v4.0.1 (public review)","title":"FrEDI v4.0.1 (public review)","text":"Starting February 2024, FrEDI Technical Documentation v4.0 FrEDI R package subject public review comment period independent, external peer-review. release corresponds FrEDI v4.0.1, public comment release version. Bug fixes - file paths function documentation run_fredi(), import_inputs(), aggregate_impacts(); income elasticity SLR sectors post-2090 run_fredi() (longer dependent argument elasticity) Updates - ** Major updates include: impacts damages now calculated state-level (previously region-level) 12 impact-category sectors; population inputs run_fredi() now requires state-level population instead region-level inputs; damage function extrapolation approach warmer temperatures run_fredi() run_fredi_sv(); default income elasticity (argument elasticity run_fredi()) 0.4 1.0; updated run_fredi() user inputs remove options calculate present values (arguments pv, rate, baseYear) add option output intermediate calculation columns ** Minor updates include: magrittr pipe operator %>% native pipe operator |>; Added monitoring default run_fredi() parameter use; output columns aggregate_impacts (added columns “sectorprimary” “includeaggregate” aggregation levels added columns “physical_impacts”, “physicalmeasure” aggregation levels except aggLevels=”impacttype”); removed option output run_fredi_sv() module results Excel template Documentation fixes - version corresponds February 2024 version FrEDI Technical Documentation (see https://www.epa.gov/cira/-fredi). Function documentation updated correspond updates. Additional sectors added - n/New features - FrEDI outputs include damages impacts state-level (48 contiguous states District Columbia) 12 impact category sectors.","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v34","dir":"Changelog","previous_headings":"","what":"FrEDI v3.4","title":"FrEDI v3.4","text":"Bug fixes - minor fixes inputs used run_fredi() run_fredi_sv() Updates - minor updates run_fredi_sv() output template documentation; run_fredi() input options Documentation fixes - minor documentation fixes, e.g., global conus temperature import_inputs, updates variant names, function documentation Additional sectors added - (temperature weather impacts ) Suicide Incidence; (health economic burden changes ) Vibriosis cases New features - added components create GitHub IO site (https://usepa.github.io/FrEDI/); new run_fredi() option report list input parameters runtime; new user option extend run_fredi() 2300","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v30","dir":"Changelog","previous_headings":"","what":"FrEDI v3.0","title":"FrEDI v3.0","text":"Bug fix - global conus temperature import_inputs Additional sector added - ATS Extreme Temperature Mortality New feature - additional capability calculate impacts social vulnerable communities","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v220","dir":"Changelog","previous_headings":"","what":"FrEDI v2.2.0","title":"FrEDI v2.2.0","text":"Additional sectors added - Crime, Agriculture, Marine Fisheries","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v210","dir":"Changelog","previous_headings":"","what":"FrEDI v2.1.0","title":"FrEDI v2.1.0","text":"Updates - extreme temperature mortality sector New feature - option user supplied IEVSL","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v20","dir":"Changelog","previous_headings":"","what":"FrEDI v2.0","title":"FrEDI v2.0","text":"Initial release FrEDI corresponds technical documentation 2021. https://www.epa.gov/cira/fredi/","code":""}]
